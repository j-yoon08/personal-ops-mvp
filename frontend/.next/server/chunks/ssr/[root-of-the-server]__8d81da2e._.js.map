{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AAAA;AAAA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,8OAAC,0KAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,8OAAC,2KAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,8OAAC,2KAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,OAAO,SAAS,EAChB,QAAQ,EACR,GAAG,OAGJ;IACC,qBACE,8OAAC,6KAAuB;QACtB,aAAU;QACV,aAAW;QACX,WAAW,IAAA,yHAAE,EACX,gzBACA;QAED,GAAG,KAAK;;YAER;0BACD,8OAAC,0KAAoB;gBAAC,OAAO;0BAC3B,cAAA,8OAAC,2OAAe;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAInC;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,WAAW,QAAQ,EACnB,GAAG,OACkD;IACrD,qBACE,8OAAC,4KAAsB;kBACrB,cAAA,8OAAC,6KAAuB;YACtB,aAAU;YACV,WAAW,IAAA,yHAAE,EACX,ijBACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,8OAAC;;;;;8BACD,8OAAC,8KAAwB;oBACvB,WAAW,IAAA,yHAAE,EACX,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,8OAAC;;;;;;;;;;;;;;;;AAIT;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,2KAAqB;QACpB,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OAC+C;IAClD,qBACE,8OAAC,0KAAoB;QACnB,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,6aACA;QAED,GAAG,KAAK;;0BAET,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC,mLAA6B;8BAC5B,cAAA,8OAAC,qNAAS;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAGzB,8OAAC,8KAAwB;0BAAE;;;;;;;;;;;;AAGjC;AAEA,SAAS,gBAAgB,EACvB,SAAS,EACT,GAAG,OACoD;IACvD,qBACE,8OAAC,+KAAyB;QACxB,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,iDAAiD;QAC9D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,qBAAqB,EAC5B,SAAS,EACT,GAAG,OACyD;IAC5D,qBACE,8OAAC,oLAA8B;QAC7B,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,qOAAa;YAAC,WAAU;;;;;;;;;;;AAG/B;AAEA,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,8OAAC,sLAAgC;QAC/B,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,2OAAe;YAAC,WAAU;;;;;;;;;;;AAGjC","debugId":null}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport type {\n  Project,\n  Task,\n  Brief,\n  DoD,\n  DecisionLog,\n  Review,\n  Sample,\n  KPIData,\n  Notification,\n  NotificationSettings,\n  NotificationStats,\n  NotificationStatus,\n  UnifiedSearchResponse,\n  SimilarProject,\n  DecisionPattern,\n  ContentSummary,\n  Template,\n  TemplateRecommendation,\n  BestPractice,\n  TemplateStats,\n  TemplateCategory,\n  TemplateType,\n  CreateProjectForm,\n  CreateTaskForm,\n  UpdateTaskStateForm,\n  CreateBriefForm,\n  User,\n  ProjectMember,\n  ProjectInvite,\n  ApprovalWorkflow,\n  ApprovalResponse,\n  TeamDecision,\n  DecisionVote,\n  DecisionComment,\n  DecisionStats,\n  UserWorkload,\n  UserRole,\n  SharePermission,\n  ApprovalStatus\n} from '@/types';\n\n// API 클라이언트 설정\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 에러 핸들링\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Projects API\nexport const projectsApi = {\n  getAll: () => apiClient.get<Project[]>('/projects'),\n  getById: (id: number) => apiClient.get<Project>(`/projects/${id}`),\n  create: (data: CreateProjectForm) => apiClient.post<Project>('/projects', data),\n  update: (id: number, data: Partial<Project>) => \n    apiClient.patch<Project>(`/projects/${id}`, data),\n  delete: (id: number) => apiClient.delete(`/projects/${id}`),\n};\n\n// Tasks API  \nexport const tasksApi = {\n  getAll: () => apiClient.get<Task[]>('/tasks'),\n  getById: (id: number) => apiClient.get<Task>(`/tasks/${id}`),\n  create: (data: CreateTaskForm) => apiClient.post<Task>('/tasks', data),\n  updateState: (id: number, data: UpdateTaskStateForm) =>\n    apiClient.patch<Task>(`/tasks/${id}/state`, data),\n  update: (id: number, data: Partial<Task>) =>\n    apiClient.patch<Task>(`/tasks/${id}`, data),\n  delete: (id: number) => apiClient.delete(`/tasks/${id}`),\n};\n\n// Briefs API\nexport const briefsApi = {\n  getAll: () => apiClient.get<Brief[]>('/briefs'),\n  getByTaskId: (taskId: number) => apiClient.get<Brief>(`/briefs/task/${taskId}`),\n  create: (data: CreateBriefForm) => apiClient.post<Brief>('/briefs', data),\n  update: (id: number, data: Partial<Brief>) =>\n    apiClient.patch<Brief>(`/briefs/${id}`, data),\n  delete: (id: number) => apiClient.delete(`/briefs/${id}`),\n};\n\n// DoD API\nexport const dodApi = {\n  getAll: () => apiClient.get<DoD[]>('/dod'),\n  getByTaskId: (taskId: number) => apiClient.get<DoD>(`/dod/task/${taskId}`),\n  create: (data: Partial<DoD>) => apiClient.post<DoD>('/dod', data),\n  update: (id: number, data: Partial<DoD>) =>\n    apiClient.patch<DoD>(`/dod/${id}`, data),\n  delete: (id: number) => apiClient.delete(`/dod/${id}`),\n};\n\n// Decisions API\nexport const decisionsApi = {\n  getAll: () => apiClient.get<DecisionLog[]>('/decisions'),\n  getByTaskId: (taskId: number) => apiClient.get<DecisionLog[]>(`/decisions/task/${taskId}`),\n  create: (data: Partial<DecisionLog>) => apiClient.post<DecisionLog>('/decisions', data),\n  updateDPlus7: (id: number, review: string) =>\n    apiClient.patch<DecisionLog>(`/decisions/${id}/dplus7`, { d_plus_7_review: review }),\n  delete: (id: number) => apiClient.delete(`/decisions/${id}`),\n};\n\n// Reviews API\nexport const reviewsApi = {\n  getAll: () => apiClient.get<Review[]>('/reviews'),\n  getByTaskId: (taskId: number) => apiClient.get<Review[]>(`/reviews/task/${taskId}`),\n  create: (data: Partial<Review>) => apiClient.post<Review>('/reviews', data),\n  update: (id: number, data: Partial<Review>) =>\n    apiClient.patch<Review>(`/reviews/${id}`, data),\n  delete: (id: number) => apiClient.delete(`/reviews/${id}`),\n};\n\n// Samples API\nexport const samplesApi = {\n  getAll: () => apiClient.get<Sample[]>('/samples'),\n  getByTaskId: (taskId: number) => apiClient.get<Sample[]>(`/samples/task/${taskId}`),\n  create: (data: Partial<Sample>) => apiClient.post<Sample>('/samples', data),\n  update: (id: number, data: Partial<Sample>) =>\n    apiClient.patch<Sample>(`/samples/${id}`, data),\n  delete: (id: number) => apiClient.delete(`/samples/${id}`),\n};\n\n// Dashboard API\nexport const dashboardApi = {\n  getKPIs: () => apiClient.get<KPIData>('/dashboard/kpi'),\n};\n\n// Exports API\nexport const exportsApi = {\n  exportProjectMd: (projectId: number) =>\n    apiClient.get<string>(`/exports/project/${projectId}/md`),\n};\n\n// Notifications API\nexport const notificationsApi = {\n  getAll: (status?: NotificationStatus, limit?: number) => {\n    const params = new URLSearchParams();\n    if (status) params.append('status', status);\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<Notification[]>(`/notifications?${params.toString()}`);\n  },\n  getPending: () => apiClient.get<Notification[]>('/notifications/pending'),\n  generate: () => apiClient.post<{message: string; count: number}>('/notifications/generate'),\n  markRead: (id: number) => apiClient.patch<{message: string}>(`/notifications/${id}/mark-read`),\n  dismiss: (id: number) => apiClient.patch<{message: string}>(`/notifications/${id}/dismiss`),\n  getSettings: () => apiClient.get<NotificationSettings>('/notifications/settings'),\n  updateSettings: (settings: Partial<NotificationSettings>) => \n    apiClient.patch<{message: string; settings: NotificationSettings}>('/notifications/settings', settings),\n  getStats: () => apiClient.get<NotificationStats>('/notifications/stats'),\n};\n\n// Search API\nexport const searchApi = {\n  unified: (query: string, types?: string[], limit?: number) => {\n    const params = new URLSearchParams({ q: query });\n    if (types && types.length > 0) {\n      types.forEach(type => params.append('types', type));\n    }\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<UnifiedSearchResponse>(`/search?${params.toString()}`);\n  },\n  similarProjects: (projectId: number, limit?: number) => {\n    const params = new URLSearchParams();\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<{project_id: number; similar_projects: SimilarProject[]}>\n      (`/search/similar-projects/${projectId}?${params.toString()}`);\n  },\n  decisionPatterns: (query: string, limit?: number) => {\n    const params = new URLSearchParams({ q: query });\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<{query: string; decision_patterns: DecisionPattern[]}>\n      (`/search/decision-patterns?${params.toString()}`);\n  },\n  projectSuggestions: (projectId: number) => \n    apiClient.get(`/search/suggestions/${projectId}`),\n  stats: () => apiClient.get<{\n    content_summary: ContentSummary;\n    search_capabilities: Record<string, string>;\n    supported_content_types: Array<{type: string; description: string}>;\n  }>('/search/stats'),\n};\n\n// Templates API\nexport const templatesApi = {\n  getAll: (category?: TemplateCategory, templateType?: TemplateType, includeSystem?: boolean, includeAI?: boolean, limit?: number) => {\n    const params = new URLSearchParams();\n    if (category) params.append('category', category);\n    if (templateType) params.append('template_type', templateType);\n    if (includeSystem !== undefined) params.append('include_system', includeSystem.toString());\n    if (includeAI !== undefined) params.append('include_ai', includeAI.toString());\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<{templates: Template[]; total: number}>(`/templates?${params.toString()}`);\n  },\n  getById: (id: number) => apiClient.get<Template>(`/templates/${id}`),\n  getRecommended: (keywords: string, limit?: number) => {\n    const params = new URLSearchParams({ keywords });\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<{keywords: string[]; recommendations: TemplateRecommendation[]}>\n      (`/templates/recommend?${params.toString()}`);\n  },\n  generateFromProject: (projectId: number) => \n    apiClient.post<{message: string; generated_templates: Template[]}>(`/templates/generate-from-project/${projectId}`),\n  recordUsage: (templateId: number, usageData: {used_for: string; was_helpful?: boolean; feedback_notes?: string}) => \n    apiClient.post(`/templates/${templateId}/use`, usageData),\n  getCategories: () => apiClient.get<{categories: Array<{value: TemplateCategory; label: string; description: string}>}>\n    ('/templates/categories/stats'),\n  getBestPractices: (category?: TemplateCategory, limit?: number) => {\n    const params = new URLSearchParams();\n    if (category) params.append('category', category);\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<{best_practices: BestPractice[]; total: number}>\n      (`/templates/best-practices/?${params.toString()}`);\n  },\n  getStats: () => apiClient.get<{template_stats: TemplateStats; summary: Record<string, unknown>}>('/templates/stats/overview'),\n  initSystemTemplates: () => apiClient.post<{message: string}>('/templates/init-system-templates'),\n};\n\n// Collaboration API\nexport const collaborationApi = {\n  // 사용자 관리\n  createUser: (userData: {username: string; email: string; full_name?: string}) =>\n    apiClient.post<{user: User}>('/collaboration/users', userData),\n  \n  getUserProjects: (userId: number, includeShared: boolean = true) =>\n    apiClient.get<{user_id: number; projects: Project[]; total: number}>\n      (`/collaboration/users/${userId}/projects?include_shared=${includeShared}`),\n  \n  getUserWorkload: (userId: number, projectId?: number) => {\n    const params = new URLSearchParams();\n    if (projectId) params.append('project_id', projectId.toString());\n    return apiClient.get<{user_id: number; project_id?: number; workload: UserWorkload}>\n      (`/collaboration/users/${userId}/workload?${params.toString()}`);\n  },\n\n  // 프로젝트 공유\n  shareProject: (projectId: number, shareData: {\n    target_user_id?: number;\n    target_email?: string;\n    role: UserRole;\n    permissions: SharePermission;\n  }, ownerId: number) =>\n    apiClient.post<{message: string; invite: ProjectInvite}>\n      (`/collaboration/projects/${projectId}/share?owner_id=${ownerId}`, shareData),\n\n  acceptInvite: (inviteToken: string, userId: number) =>\n    apiClient.post<{message: string; membership: ProjectMember}>\n      (`/collaboration/invites/${inviteToken}/accept?user_id=${userId}`),\n\n  getProjectMembers: (projectId: number) =>\n    apiClient.get<{project_id: number; members: ProjectMember[]; total: number}>\n      (`/collaboration/projects/${projectId}/members`),\n\n  // 태스크 할당\n  assignTask: (taskId: number, assigneeId: number, assignerId: number) =>\n    apiClient.patch<{message: string; task: Task}>\n      (`/collaboration/tasks/${taskId}/assign?assigner_id=${assignerId}`, {assignee_id: assigneeId}),\n\n  // 승인 워크플로우\n  createApprovalWorkflow: (projectId: number, approvalData: {\n    title: string;\n    description: string;\n    approver_user_ids: number[];\n    required_approvers: number;\n    task_id?: number;\n    decision_id?: number;\n  }, requestedById: number) =>\n    apiClient.post<{message: string; workflow: ApprovalWorkflow}>\n      (`/collaboration/projects/${projectId}/approvals?requested_by_id=${requestedById}`, approvalData),\n\n  respondToApproval: (workflowId: number, responseData: {\n    is_approved: boolean;\n    comment?: string;\n  }, approverId: number) =>\n    apiClient.post<{message: string; response: ApprovalResponse}>\n      (`/collaboration/approvals/${workflowId}/respond?approver_id=${approverId}`, responseData),\n\n  getApprovalWorkflow: (workflowId: number) =>\n    apiClient.get<{workflow: ApprovalWorkflow; responses: ApprovalResponse[]}>\n      (`/collaboration/approvals/${workflowId}`),\n\n  // 팀 의사결정\n  createTeamDecision: (projectId: number, decisionData: {\n    title: string;\n    description: string;\n    options: string[];\n    task_id?: number;\n    is_voting_enabled: boolean;\n    voting_deadline?: string;\n    allow_multiple_votes: boolean;\n  }, createdById: number) =>\n    apiClient.post<{message: string; decision: TeamDecision}>\n      (`/collaboration/projects/${projectId}/decisions?created_by_id=${createdById}`, decisionData),\n\n  castVote: (decisionId: number, voteData: {\n    selected_options: string[];\n    reasoning?: string;\n  }, voterId: number) =>\n    apiClient.post<{message: string; vote: DecisionVote}>\n      (`/collaboration/decisions/${decisionId}/vote?voter_id=${voterId}`, voteData),\n\n  concludeDecision: (decisionId: number, conclusionData: {\n    final_decision: string;\n    decision_rationale?: string;\n  }, concluderId: number) =>\n    apiClient.patch<{message: string; decision: TeamDecision}>\n      (`/collaboration/decisions/${decisionId}/conclude?concluder_id=${concluderId}`, conclusionData),\n\n  addDecisionComment: (decisionId: number, commentData: {\n    content: string;\n    parent_comment_id?: number;\n  }, authorId: number) =>\n    apiClient.post<{message: string; comment: DecisionComment}>\n      (`/collaboration/decisions/${decisionId}/comments?author_id=${authorId}`, commentData),\n\n  getTeamDecision: (decisionId: number) =>\n    apiClient.get<{\n      decision: TeamDecision;\n      votes: DecisionVote[];\n      comments: DecisionComment[];\n      stats: DecisionStats;\n    }>(`/collaboration/decisions/${decisionId}`),\n\n  getDecisionStats: (decisionId: number) =>\n    apiClient.get<{decision_id: number; stats: DecisionStats}>\n      (`/collaboration/decisions/${decisionId}/stats`),\n};\n\nexport default apiClient;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 650, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/hooks/use-dashboard.ts"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport { dashboardApi } from '@/services/api';\n\n// Query Keys\nexport const dashboardKeys = {\n  all: ['dashboard'] as const,\n  kpis: () => [...dashboardKeys.all, 'kpis'] as const,\n};\n\n// Queries\nexport function useKPIs() {\n  return useQuery({\n    queryKey: dashboardKeys.kpis(),\n    queryFn: () => dashboardApi.getKPIs().then(res => res.data),\n    refetchInterval: 30000, // 30초마다 자동 갱신\n  });\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGO,MAAM,gBAAgB;IAC3B,KAAK;QAAC;KAAY;IAClB,MAAM,IAAM;eAAI,cAAc,GAAG;YAAE;SAAO;AAC5C;AAGO,SAAS;IACd,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,cAAc,IAAI;QAC5B,SAAS,IAAM,sIAAY,CAAC,OAAO,GAAG,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI;QAC1D,iBAAiB;IACnB;AACF","debugId":null}},
    {"offset": {"line": 680, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/hooks/use-projects.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { projectsApi } from '@/services/api';\nimport type { CreateProjectForm, Project } from '@/types';\nimport { dashboardKeys } from './use-dashboard';\n\n// Query Keys\nexport const projectKeys = {\n  all: ['projects'] as const,\n  lists: () => [...projectKeys.all, 'list'] as const,\n  list: (filters: string) => [...projectKeys.lists(), { filters }] as const,\n  details: () => [...projectKeys.all, 'detail'] as const,\n  detail: (id: number) => [...projectKeys.details(), id] as const,\n};\n\n// Queries\nexport function useProjects() {\n  return useQuery({\n    queryKey: projectKeys.lists(),\n    queryFn: () => projectsApi.getAll().then(res => res.data),\n  });\n}\n\nexport function useProject(id: number) {\n  return useQuery({\n    queryKey: projectKeys.detail(id),\n    queryFn: () => projectsApi.getById(id).then(res => res.data),\n    enabled: !!id,\n  });\n}\n\n// Mutations\nexport function useCreateProject() {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (data: CreateProjectForm) =>\n      projectsApi.create(data).then(res => res.data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      // KPI 대시보드도 무효화\n      queryClient.invalidateQueries({ queryKey: dashboardKeys.kpis() });\n    },\n  });\n}\n\nexport function useUpdateProject() {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ id, data }: { id: number; data: Partial<Project> }) =>\n      projectsApi.update(id, data).then(res => res.data),\n    onSuccess: (updatedProject) => {\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      queryClient.setQueryData(\n        projectKeys.detail(updatedProject.id!), \n        updatedProject\n      );\n      queryClient.invalidateQueries({ queryKey: dashboardKeys.kpis() });\n    },\n  });\n}\n\nexport function useDeleteProject() {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (id: number) => projectsApi.delete(id),\n    onSuccess: (_, id) => {\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      queryClient.removeQueries({ queryKey: projectKeys.detail(id) });\n      queryClient.invalidateQueries({ queryKey: dashboardKeys.kpis() });\n    },\n  });\n}"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA;AAEA;;;;AAGO,MAAM,cAAc;IACzB,KAAK;QAAC;KAAW;IACjB,OAAO,IAAM;eAAI,YAAY,GAAG;YAAE;SAAO;IACzC,MAAM,CAAC,UAAoB;eAAI,YAAY,KAAK;YAAI;gBAAE;YAAQ;SAAE;IAChE,SAAS,IAAM;eAAI,YAAY,GAAG;YAAE;SAAS;IAC7C,QAAQ,CAAC,KAAe;eAAI,YAAY,OAAO;YAAI;SAAG;AACxD;AAGO,SAAS;IACd,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,YAAY,KAAK;QAC3B,SAAS,IAAM,qIAAW,CAAC,MAAM,GAAG,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI;IAC1D;AACF;AAEO,SAAS,WAAW,EAAU;IACnC,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,YAAY,MAAM,CAAC;QAC7B,SAAS,IAAM,qIAAW,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI;QAC3D,SAAS,CAAC,CAAC;IACb;AACF;AAGO,SAAS;IACd,MAAM,cAAc,IAAA,wMAAc;IAElC,OAAO,IAAA,6LAAW,EAAC;QACjB,YAAY,CAAC,OACX,qIAAW,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI;QAC/C,WAAW;YACT,YAAY,iBAAiB,CAAC;gBAAE,UAAU,YAAY,KAAK;YAAG;YAC9D,gBAAgB;YAChB,YAAY,iBAAiB,CAAC;gBAAE,UAAU,iJAAa,CAAC,IAAI;YAAG;QACjE;IACF;AACF;AAEO,SAAS;IACd,MAAM,cAAc,IAAA,wMAAc;IAElC,OAAO,IAAA,6LAAW,EAAC;QACjB,YAAY,CAAC,EAAE,EAAE,EAAE,IAAI,EAA0C,GAC/D,qIAAW,CAAC,MAAM,CAAC,IAAI,MAAM,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI;QACnD,WAAW,CAAC;YACV,YAAY,iBAAiB,CAAC;gBAAE,UAAU,YAAY,KAAK;YAAG;YAC9D,YAAY,YAAY,CACtB,YAAY,MAAM,CAAC,eAAe,EAAE,GACpC;YAEF,YAAY,iBAAiB,CAAC;gBAAE,UAAU,iJAAa,CAAC,IAAI;YAAG;QACjE;IACF;AACF;AAEO,SAAS;IACd,MAAM,cAAc,IAAA,wMAAc;IAElC,OAAO,IAAA,6LAAW,EAAC;QACjB,YAAY,CAAC,KAAe,qIAAW,CAAC,MAAM,CAAC;QAC/C,WAAW,CAAC,GAAG;YACb,YAAY,iBAAiB,CAAC;gBAAE,UAAU,YAAY,KAAK;YAAG;YAC9D,YAAY,aAAa,CAAC;gBAAE,UAAU,YAAY,MAAM,CAAC;YAAI;YAC7D,YAAY,iBAAiB,CAAC;gBAAE,UAAU,iJAAa,CAAC,IAAI;YAAG;QACjE;IACF;AACF","debugId":null}},
    {"offset": {"line": 789, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/hooks/use-tasks.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { tasksApi } from '@/services/api';\nimport type { CreateTaskForm, Task, UpdateTaskStateForm } from '@/types';\nimport { projectKeys } from './use-projects';\nimport { dashboardKeys } from './use-dashboard';\n\n// Query Keys\nexport const taskKeys = {\n  all: ['tasks'] as const,\n  lists: () => [...taskKeys.all, 'list'] as const,\n  list: (filters: string) => [...taskKeys.lists(), { filters }] as const,\n  details: () => [...taskKeys.all, 'detail'] as const,\n  detail: (id: number) => [...taskKeys.details(), id] as const,\n};\n\n// Queries\nexport function useTasks() {\n  return useQuery({\n    queryKey: taskKeys.lists(),\n    queryFn: () => tasksApi.getAll().then(res => res.data),\n  });\n}\n\nexport function useTask(id: number) {\n  return useQuery({\n    queryKey: taskKeys.detail(id),\n    queryFn: () => tasksApi.getById(id).then(res => res.data),\n    enabled: !!id,\n  });\n}\n\n// Mutations\nexport function useCreateTask() {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (data: CreateTaskForm) =>\n      tasksApi.create(data).then(res => res.data),\n    onSuccess: () => {\n      // 작업 목록 무효화\n      queryClient.invalidateQueries({ queryKey: taskKeys.lists() });\n      // 프로젝트 목록도 무효화 (작업 수 업데이트)\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      // KPI 대시보드도 무효화\n      queryClient.invalidateQueries({ queryKey: dashboardKeys.kpis() });\n    },\n  });\n}\n\nexport function useUpdateTaskState() {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ id, data }: { id: number; data: UpdateTaskStateForm }) =>\n      tasksApi.updateState(id, data).then(res => res.data),\n    onSuccess: (updatedTask) => {\n      queryClient.invalidateQueries({ queryKey: taskKeys.lists() });\n      queryClient.setQueryData(\n        taskKeys.detail(updatedTask.id!), \n        updatedTask\n      );\n      // KPI 대시보드 무효화 (상태 변경이 KPI에 영향)\n      queryClient.invalidateQueries({ queryKey: dashboardKeys.kpis() });\n    },\n  });\n}\n\nexport function useUpdateTask() {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ id, data }: { id: number; data: Partial<Task> }) =>\n      tasksApi.update(id, data).then(res => res.data),\n    onSuccess: (updatedTask) => {\n      queryClient.invalidateQueries({ queryKey: taskKeys.lists() });\n      queryClient.setQueryData(\n        taskKeys.detail(updatedTask.id!), \n        updatedTask\n      );\n      // KPI 대시보드 무효화\n      queryClient.invalidateQueries({ queryKey: dashboardKeys.kpis() });\n    },\n  });\n}\n\nexport function useDeleteTask() {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (id: number) => tasksApi.delete(id),\n    onSuccess: (_, id) => {\n      queryClient.invalidateQueries({ queryKey: taskKeys.lists() });\n      queryClient.removeQueries({ queryKey: taskKeys.detail(id) });\n      // 프로젝트 목록과 KPI 무효화\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      queryClient.invalidateQueries({ queryKey: dashboardKeys.kpis() });\n    },\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 928, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  showCloseButton = true,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\n  showCloseButton?: boolean\n}) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        {showCloseButton && (\n          <DialogPrimitive.Close\n            data-slot=\"dialog-close\"\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\n          >\n            <XIcon />\n            <span className=\"sr-only\">Close</span>\n          </DialogPrimitive.Close>\n        )}\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,8OAAC,0KAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,8OAAC,6KAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,8OAAC,4KAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,8OAAC,2KAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,8OAAC,6KAAuB;QACtB,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,kBAAkB,IAAI,EACtB,GAAG,OAGJ;IACC,qBACE,8OAAC;QAAa,aAAU;;0BACtB,8OAAC;;;;;0BACD,8OAAC,6KAAuB;gBACtB,aAAU;gBACV,WAAW,IAAA,yHAAE,EACX,+WACA;gBAED,GAAG,KAAK;;oBAER;oBACA,iCACC,8OAAC,2KAAqB;wBACpB,aAAU;wBACV,WAAU;;0CAEV,8OAAC,yMAAK;;;;;0CACN,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAMtC;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,2KAAqB;QACpB,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,iLAA2B;QAC1B,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1110, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,yKAAmB;QAClB,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1137, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  useFormState,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState } = useFormContext()\n  const formState = useFormState({ name: fieldContext.name })\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nfunction FormItem({ className, ...props }: React.ComponentProps<\"div\">) {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div\n        data-slot=\"form-item\"\n        className={cn(\"grid gap-2\", className)}\n        {...props}\n      />\n    </FormItemContext.Provider>\n  )\n}\n\nfunction FormLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      data-slot=\"form-label\"\n      data-error={!!error}\n      className={cn(\"data-[error=true]:text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n}\n\nfunction FormControl({ ...props }: React.ComponentProps<typeof Slot>) {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      data-slot=\"form-control\"\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n}\n\nfunction FormDescription({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      data-slot=\"form-description\"\n      id={formDescriptionId}\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction FormMessage({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : props.children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      data-slot=\"form-message\"\n      id={formMessageId}\n      className={cn(\"text-destructive text-sm\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n}\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAEA;AAEA;AACA;AAUA;AACA;AAhBA;;;;;;;AAkBA,MAAM,OAAO,8KAAY;AASzB,MAAM,iCAAmB,sNAAmB,CAC1C,CAAC;AAGH,MAAM,YAAY,CAGhB,EACA,GAAG,OACkC;IACrC,qBACE,8OAAC,iBAAiB,QAAQ;QAAC,OAAO;YAAE,MAAM,MAAM,IAAI;QAAC;kBACnD,cAAA,8OAAC,4KAAU;YAAE,GAAG,KAAK;;;;;;;;;;;AAG3B;AAEA,MAAM,eAAe;IACnB,MAAM,eAAe,mNAAgB,CAAC;IACtC,MAAM,cAAc,mNAAgB,CAAC;IACrC,MAAM,EAAE,aAAa,EAAE,GAAG,IAAA,gLAAc;IACxC,MAAM,YAAY,IAAA,8KAAY,EAAC;QAAE,MAAM,aAAa,IAAI;IAAC;IACzD,MAAM,aAAa,cAAc,aAAa,IAAI,EAAE;IAEpD,IAAI,CAAC,cAAc;QACjB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,EAAE,EAAE,GAAG;IAEf,OAAO;QACL;QACA,MAAM,aAAa,IAAI;QACvB,YAAY,GAAG,GAAG,UAAU,CAAC;QAC7B,mBAAmB,GAAG,GAAG,sBAAsB,CAAC;QAChD,eAAe,GAAG,GAAG,kBAAkB,CAAC;QACxC,GAAG,UAAU;IACf;AACF;AAMA,MAAM,gCAAkB,sNAAmB,CACzC,CAAC;AAGH,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAoC;IACpE,MAAM,KAAK,8MAAW;IAEtB,qBACE,8OAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;QAAG;kBACpC,cAAA,8OAAC;YACC,aAAU;YACV,WAAW,IAAA,yHAAE,EAAC,cAAc;YAC3B,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,UAAU,EACjB,SAAS,EACT,GAAG,OAC8C;IACjD,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG;IAE9B,qBACE,8OAAC,0IAAK;QACJ,aAAU;QACV,cAAY,CAAC,CAAC;QACd,WAAW,IAAA,yHAAE,EAAC,sCAAsC;QACpD,SAAS;QACR,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,GAAG,OAA0C;IAClE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG;IAEhE,qBACE,8OAAC,wKAAI;QACH,aAAU;QACV,IAAI;QACJ,oBACE,CAAC,QACG,GAAG,mBAAmB,GACtB,GAAG,kBAAkB,CAAC,EAAE,eAAe;QAE7C,gBAAc,CAAC,CAAC;QACf,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAkC;IACzE,MAAM,EAAE,iBAAiB,EAAE,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,IAAI;QACJ,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAkC;IACrE,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,OAAO,QAAQ,OAAO,OAAO,WAAW,MAAM,MAAM,QAAQ;IAElE,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,8OAAC;QACC,aAAU;QACV,IAAI;QACJ,WAAW,IAAA,yHAAE,EAAC,4BAA4B;QACzC,GAAG,KAAK;kBAER;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 1295, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/components/dialogs/create-task-dialog.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Plus } from \"lucide-react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport * as z from \"zod\";\nimport { useCreateTask } from \"@/hooks/use-tasks\";\nimport { useProjects } from \"@/hooks/use-projects\";\nimport { toast } from \"sonner\";\n\nconst formSchema = z.object({\n  project_id: z.string().min(1, \"프로젝트를 선택해주세요\"),\n  title: z.string().min(1, \"작업 제목을 입력해주세요\"),\n  priority: z.string().min(1, \"우선순위를 선택해주세요\"),\n  due_date: z.string().optional(),\n});\n\ntype FormValues = z.infer<typeof formSchema>;\n\nexport function CreateTaskDialog() {\n  const [open, setOpen] = useState(false);\n  const createTask = useCreateTask();\n  const { data: projects, isLoading: projectsLoading } = useProjects();\n  \n  // 프로젝트가 없으면 비활성화\n  const hasProjects = projects && projects.length > 0;\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      project_id: \"\",\n      title: \"\",\n      priority: \"3\",\n      due_date: \"\",\n    },\n  });\n\n  const onSubmit = async (values: FormValues) => {\n    try {\n      const taskData = {\n        project_id: parseInt(values.project_id),\n        title: values.title,\n        priority: parseInt(values.priority),\n        due_date: values.due_date || undefined,\n      };\n      \n      await createTask.mutateAsync(taskData);\n      toast.success(\"작업이 생성되었습니다!\");\n      form.reset();\n      setOpen(false);\n    } catch (error: unknown) {\n      const errorMessage = ((error as any)?.response?.data?.detail) || \"작업 생성에 실패했습니다.\";\n      toast.error(errorMessage);\n      console.error(\"Error creating task:\", error);\n    }\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        <Button \n          variant=\"outline\" \n          disabled={!hasProjects}\n          title={!hasProjects ? \"먼저 프로젝트를 생성해주세요\" : \"\"}\n        >\n          <Plus className=\"mr-2 h-4 w-4\" />\n          새 작업\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>새 작업 생성</DialogTitle>\n          <DialogDescription>\n            {hasProjects \n              ? \"새로운 작업을 생성합니다. 프로젝트와 작업 제목은 필수입니다.\" \n              : \"작업을 생성하려면 먼저 프로젝트를 생성해주세요.\"\n            }\n          </DialogDescription>\n        </DialogHeader>\n        \n        {!hasProjects ? (\n          <div className=\"text-center py-4\">\n            <p className=\"text-muted-foreground mb-4\">\n              {projectsLoading ? \"프로젝트를 불러오는 중...\" : \"생성된 프로젝트가 없습니다.\"}\n            </p>\n            <Button onClick={() => setOpen(false)}>\n              확인\n            </Button>\n          </div>\n        ) : (\n        \n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n            <FormField\n              control={form.control}\n              name=\"project_id\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>프로젝트 *</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"프로젝트를 선택하세요\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      {projects?.map((project) => (\n                        <SelectItem key={project.id} value={project.id!.toString()}>\n                          {project.name}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            \n            <FormField\n              control={form.control}\n              name=\"title\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>작업 제목 *</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"예: 데이터베이스 설계\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            \n            <FormField\n              control={form.control}\n              name=\"priority\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>우선순위 *</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"우선순위 선택\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"1\">1 - 최고</SelectItem>\n                      <SelectItem value=\"2\">2 - 높음</SelectItem>\n                      <SelectItem value=\"3\">3 - 보통</SelectItem>\n                      <SelectItem value=\"4\">4 - 낮음</SelectItem>\n                      <SelectItem value=\"5\">5 - 최하</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            \n            <FormField\n              control={form.control}\n              name=\"due_date\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>마감일 (선택)</FormLabel>\n                  <FormControl>\n                    <Input type=\"date\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            \n            <div className=\"flex justify-end space-x-2 pt-4\">\n              <Button \n                type=\"button\" \n                variant=\"outline\" \n                onClick={() => setOpen(false)}\n              >\n                취소\n              </Button>\n              <Button \n                type=\"submit\" \n                disabled={createTask.isPending}\n              >\n                {createTask.isPending ? \"생성 중...\" : \"생성\"}\n              </Button>\n            </div>\n          </form>\n        </Form>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1768, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/types/index.ts"],"sourcesContent":["// Backend 모델들과 동일한 구조의 TypeScript 타입들\n\nexport enum TaskState {\n  BACKLOG = \"BACKLOG\",\n  IN_PROGRESS = \"IN_PROGRESS\", \n  DONE = \"DONE\",\n  PAUSED = \"PAUSED\",\n  CANCELED = \"CANCELED\"\n}\n\nexport enum ReviewType {\n  PREMORTEM = \"PREMORTEM\",\n  MIDMORTEM = \"MIDMORTEM\", \n  RETRO = \"RETRO\"\n}\n\nexport enum NotificationType {\n  DUE_DATE_REMINDER = \"DUE_DATE_REMINDER\",\n  OVERDUE_TASK = \"OVERDUE_TASK\",\n  MISSING_BRIEF = \"MISSING_BRIEF\",\n  MISSING_DOD = \"MISSING_DOD\",\n  STALE_TASK = \"STALE_TASK\",\n  REVIEW_SCHEDULE = \"REVIEW_SCHEDULE\"\n}\n\nexport enum NotificationStatus {\n  PENDING = \"PENDING\",\n  SENT = \"SENT\",\n  READ = \"READ\",\n  DISMISSED = \"DISMISSED\"\n}\n\nexport interface Project {\n  id?: number;\n  name: string;\n  description?: string;\n  owner_id: number;\n  is_private: boolean;\n  created_at: string;\n  task_count?: number;\n  tasks?: Task[];\n  owner?: User;\n  members?: ProjectMember[];\n}\n\nexport interface Task {\n  id?: number;\n  project_id: number;\n  title: string;\n  state: TaskState;\n  priority: number; // 1 high - 5 low\n  due_date?: string;\n  assignee_id?: number;\n  created_at: string;\n  updated_at: string;\n  // metrics\n  context_switch_count: number;\n  rework_count: number;\n  dod_checked: boolean;\n  \n  project?: Project;\n  assignee?: User;\n  brief?: Brief;\n  dod?: DoD;\n  reviews?: Review[];\n  decision_logs?: DecisionLog[];\n  samples?: Sample[];\n}\n\nexport interface Brief {\n  id?: number;\n  task_id: number;\n  // 5SB\n  purpose: string;\n  success_criteria: string;\n  constraints: string;\n  priority: string;\n  validation: string;\n  created_at: string;\n  task?: Task;\n}\n\nexport interface DoD {\n  id?: number;\n  task_id: number;\n  deliverable_formats: string; // e.g., \"MD,PDF,PPTX\"\n  mandatory_checks: string;    // JSON-encoded list of 5 checks\n  quality_bar: string;         // e.g., typo rate, length, examples, etc.\n  verification: string;        // e.g., sample n, review count\n  deadline?: string;\n  version_tag: string;\n  created_at: string;\n  task?: Task;\n}\n\nexport interface DecisionLog {\n  id?: number;\n  task_id: number;\n  date: string;\n  problem: string;\n  options: string;\n  decision_reason: string;\n  assumptions_risks: string;\n  d_plus_7_review?: string;\n  created_at: string;\n  task?: Task;\n}\n\nexport interface Review {\n  id?: number;\n  task_id: number;\n  review_type: ReviewType;\n  positives: string;\n  negatives: string;\n  changes_next: string;\n  created_at: string;\n  task?: Task;\n}\n\nexport interface Sample {\n  id?: number;\n  task_id: number;\n  proportion: number; // 10% rule\n  notes?: string;\n  approved: boolean;\n  created_at: string;\n  task?: Task;\n}\n\n// API Response 타입들\nexport interface KPIData {\n  // Core KPIs\n  rework_rate: number;\n  context_switches_per_day: number;\n  dod_adherence: number;\n  sample_validation_rate: number;\n  brief_completion_rate: number;\n  \n  // Additional metrics\n  dod_definition_rate: number;\n  avg_project_completion: number;\n  \n  // Counts\n  total_projects: number;\n  total_tasks: number;\n  total_reviews: number;\n  total_decisions: number;\n  \n  // Task state distribution\n  task_states: {\n    backlog: number;\n    in_progress: number;\n    done: number;\n    paused: number;\n    canceled: number;\n  };\n  \n  // Recent activity (last 7 days)\n  recent_tasks: number;\n  recent_reviews: number;\n  recent_decisions: number;\n}\n\nexport interface Notification {\n  id?: number;\n  type: NotificationType;\n  title: string;\n  message: string;\n  status: NotificationStatus;\n  task_id?: number;\n  project_id?: number;\n  scheduled_for: string;\n  sent_at?: string;\n  read_at?: string;\n  dismissed_at?: string;\n  created_at: string;\n}\n\nexport interface NotificationSettings {\n  id?: number;\n  due_date_reminder_days: number;\n  enable_due_date_reminders: boolean;\n  enable_missing_brief_alerts: boolean;\n  enable_missing_dod_alerts: boolean;\n  stale_task_days: number;\n  enable_stale_task_alerts: boolean;\n  enable_review_reminders: boolean;\n  review_reminder_frequency_days: number;\n}\n\nexport interface NotificationStats {\n  pending: number;\n  sent: number;\n  read: number;\n  dismissed: number;\n  total: number;\n}\n\nexport interface SearchResult {\n  id: number;\n  type: string;\n  title: string;\n  content: string;\n  task_id?: number;\n  project_id?: number;\n  created_at: string;\n  relevance_score: number;\n}\n\nexport interface UnifiedSearchResponse {\n  results: {\n    projects?: SearchResult[];\n    tasks?: SearchResult[];\n    briefs?: SearchResult[];\n    dod?: SearchResult[];\n    decisions?: SearchResult[];\n    reviews?: SearchResult[];\n  };\n  query: string;\n  total_results: number;\n}\n\nexport interface SimilarProject {\n  id: number;\n  name: string;\n  description: string;\n  similarity_score: number;\n  created_at: string;\n}\n\nexport interface DecisionPattern {\n  id: number;\n  problem: string;\n  options: string;\n  decision: string;\n  risks: string;\n  d_plus_7_review?: string;\n  has_review: boolean;\n  task_id: number;\n  created_at: string;\n  relevance_score: number;\n}\n\nexport interface ContentSummary {\n  projects: number;\n  tasks: number;\n  briefs: number;\n  dod: number;\n  decisions: number;\n  reviews: number;\n  total: number;\n}\n\nexport enum TemplateCategory {\n  WEB_DEVELOPMENT = \"WEB_DEVELOPMENT\",\n  MOBILE_APP = \"MOBILE_APP\",\n  DATA_ANALYSIS = \"DATA_ANALYSIS\",\n  RESEARCH = \"RESEARCH\",\n  MARKETING = \"MARKETING\",\n  DESIGN = \"DESIGN\",\n  INFRASTRUCTURE = \"INFRASTRUCTURE\",\n  AUTOMATION = \"AUTOMATION\",\n  CONTENT_CREATION = \"CONTENT_CREATION\",\n  BUSINESS_STRATEGY = \"BUSINESS_STRATEGY\",\n  GENERAL = \"GENERAL\"\n}\n\nexport enum TemplateType {\n  BRIEF = \"BRIEF\",\n  DOD = \"DOD\",\n  PROJECT = \"PROJECT\"\n}\n\nexport interface Template {\n  id: number;\n  name: string;\n  description?: string;\n  category: TemplateCategory;\n  template_type: TemplateType;\n  content: Record<string, unknown>;\n  is_system_template: boolean;\n  is_ai_generated: boolean;\n  usage_count: number;\n  success_rate?: number;\n  tags: string[];\n  created_at: string;\n  source_project_id?: number;\n}\n\nexport interface TemplateRecommendation {\n  template: Template;\n  relevance_score: number;\n  match_reasons: string[];\n}\n\nexport interface BestPractice {\n  id: number;\n  title: string;\n  description: string;\n  category: TemplateCategory;\n  principles: string[];\n  do_list: string[];\n  dont_list: string[];\n  examples: string[];\n  source: string;\n  confidence_score: number;\n  tags: string[];\n  created_at: string;\n}\n\nexport interface TemplateStats {\n  total_templates: number;\n  system_templates: number;\n  ai_generated_templates: number;\n  user_templates: number;\n  category_distribution: Record<string, number>;\n  most_used_templates: Array<{\n    id: number;\n    name: string;\n    category: string;\n    usage_count: number;\n    success_rate?: number;\n  }>;\n}\n\n// 협업 관련 타입들\nexport enum UserRole {\n  OWNER = \"OWNER\",\n  ADMIN = \"ADMIN\", \n  MEMBER = \"MEMBER\",\n  VIEWER = \"VIEWER\"\n}\n\nexport enum SharePermission {\n  READ = \"READ\",\n  WRITE = \"WRITE\",\n  ADMIN = \"ADMIN\"\n}\n\nexport enum InviteStatus {\n  PENDING = \"PENDING\",\n  ACCEPTED = \"ACCEPTED\",\n  REJECTED = \"REJECTED\",\n  EXPIRED = \"EXPIRED\"\n}\n\nexport enum ApprovalStatus {\n  PENDING = \"PENDING\",\n  APPROVED = \"APPROVED\",\n  REJECTED = \"REJECTED\",\n  CANCELLED = \"CANCELLED\"\n}\n\nexport interface User {\n  id: number;\n  username: string;\n  email: string;\n  full_name?: string;\n  is_active: boolean;\n  created_at: string;\n}\n\nexport interface ProjectMember {\n  user: User;\n  role: UserRole;\n  permissions: SharePermission;\n  joined_at: string;\n  is_owner: boolean;\n}\n\nexport interface ProjectInvite {\n  id: number;\n  project_id: number;\n  invited_by_id: number;\n  invited_user_id?: number;\n  invited_email?: string;\n  role: UserRole;\n  permissions: SharePermission;\n  status: InviteStatus;\n  invite_token: string;\n  expires_at: string;\n  created_at: string;\n  responded_at?: string;\n}\n\nexport interface ApprovalWorkflow {\n  id: number;\n  project_id: number;\n  task_id?: number;\n  decision_id?: number;\n  title: string;\n  description: string;\n  requested_by_id: number;\n  required_approvers: number;\n  approver_user_ids: number[];\n  status: ApprovalStatus;\n  created_at: string;\n  completed_at?: string;\n}\n\nexport interface ApprovalResponse {\n  id: number;\n  workflow_id: number;\n  approver: User;\n  is_approved: boolean;\n  comment?: string;\n  created_at: string;\n}\n\nexport interface TeamDecision {\n  id: number;\n  project_id: number;\n  task_id?: number;\n  title: string;\n  description: string;\n  options: string[];\n  is_voting_enabled: boolean;\n  voting_deadline?: string;\n  allow_multiple_votes: boolean;\n  is_concluded: boolean;\n  final_decision?: string;\n  decision_rationale?: string;\n  created_by_id: number;\n  created_at: string;\n  concluded_at?: string;\n}\n\nexport interface DecisionVote {\n  id: number;\n  decision_id: number;\n  voter: User;\n  selected_options: string[];\n  reasoning?: string;\n  created_at: string;\n}\n\nexport interface DecisionComment {\n  id: number;\n  decision_id: number;\n  author: User;\n  content: string;\n  parent_comment_id?: number;\n  created_at: string;\n}\n\nexport interface DecisionStats {\n  total_votes: number;\n  option_counts: Record<string, number>;\n  participation_rate: number;\n}\n\nexport interface UserWorkload {\n  total_tasks: number;\n  by_state: {\n    BACKLOG: number;\n    IN_PROGRESS: number;\n    DONE: number;\n    PAUSED: number;\n    CANCELED: number;\n  };\n  overdue_tasks: number;\n  high_priority_tasks: number;\n}\n\n// Error handling types\nexport interface ApiError {\n  response?: {\n    data?: {\n      detail?: string;\n    };\n  };\n}\n\n// Form 타입들\nexport interface CreateProjectForm {\n  name: string;\n  description?: string;\n}\n\nexport interface CreateTaskForm {\n  project_id: number;\n  title: string;\n  priority: number;\n  due_date?: string;\n}\n\nexport interface UpdateTaskStateForm {\n  state: TaskState;\n}\n\nexport interface CreateBriefForm {\n  task_id: number;\n  purpose: string;\n  success_criteria: string;\n  constraints: string;\n  priorities: string;\n  validation_method: string;\n}"],"names":[],"mappings":"AAAA,sCAAsC;;;;;;;;;;;;;;;;;;;;;;;AAE/B,IAAA,AAAK,mCAAA;;;;;;WAAA;;AAQL,IAAA,AAAK,oCAAA;;;;WAAA;;AAML,IAAA,AAAK,0CAAA;;;;;;;WAAA;;AASL,IAAA,AAAK,4CAAA;;;;;WAAA;;AAoOL,IAAA,AAAK,0CAAA;;;;;;;;;;;;WAAA;;AAcL,IAAA,AAAK,sCAAA;;;;WAAA;;AA2DL,IAAA,AAAK,kCAAA;;;;;WAAA;;AAOL,IAAA,AAAK,yCAAA;;;;WAAA;;AAML,IAAA,AAAK,sCAAA;;;;;WAAA;;AAOL,IAAA,AAAK,wCAAA;;;;;WAAA","debugId":null}},
    {"offset": {"line": 1872, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/app/tasks/page.tsx"],"sourcesContent":["'use client';\n\nimport { ApiError, useState } from 'react';\nimport { ApiError, Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ApiError, Badge } from '@/components/ui/badge';\nimport { ApiError, Button } from '@/components/ui/button';\nimport { ApiError, Input } from '@/components/ui/input';\nimport { ApiError,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { ApiError, useTasks, useUpdateTaskState } from '@/hooks/use-tasks';\nimport { ApiError, useProjects } from '@/hooks/use-projects';\nimport { ApiError, CreateTaskDialog } from '@/components/dialogs/create-task-dialog';\nimport { ApiError, TaskState, ApiError } from '@/types';\nimport { ApiError, CheckSquare, Clock, AlertCircle, CheckCircle, Pause, X, Search, Filter, SortAsc, User, Target, Calendar } from 'lucide-react';\nimport { ApiError, toast } from 'sonner';\nimport Link from 'next/link';\nimport { ApiError, format } from 'date-fns';\n\nconst stateConfig = {\n  [TaskState.BACKLOG]: {\n    label: '대기',\n    icon: Clock,\n    color: 'bg-gray-500',\n    variant: 'secondary' as const\n  },\n  [TaskState.IN_PROGRESS]: {\n    label: '진행중',\n    icon: AlertCircle,\n    color: 'bg-blue-500',\n    variant: 'default' as const\n  },\n  [TaskState.DONE]: {\n    label: '완료',\n    icon: CheckCircle,\n    color: 'bg-green-500',\n    variant: 'secondary' as const\n  },\n  [TaskState.PAUSED]: {\n    label: '중단',\n    icon: Pause,\n    color: 'bg-yellow-500',\n    variant: 'outline' as const\n  },\n  [TaskState.CANCELED]: {\n    label: '취소',\n    icon: X,\n    color: 'bg-red-500',\n    variant: 'destructive' as const\n  }\n};\n\ntype SortBy = 'created' | 'title' | 'priority' | 'due_date';\ntype SortOrder = 'asc' | 'desc';\n\nexport default function TasksPage() {\n  const { data: tasks, isLoading: tasksLoading } = useTasks();\n  const { data: projects, isLoading: projectsLoading } = useProjects();\n  const updateTaskState = useUpdateTaskState();\n  \n  const [searchTerm, setSearchTerm] = useState('');\n  const [stateFilter, setStateFilter] = useState<TaskState | 'ALL'>('ALL');\n  const [projectFilter, setProjectFilter] = useState<number | 'ALL'>('ALL');\n  const [sortBy, setSortBy] = useState<SortBy>('created');\n  const [sortOrder, setSortOrder] = useState<SortOrder>('desc');\n\n  // 검색 및 필터링\n  const filteredTasks = tasks?.filter(task => {\n    // 검색어 필터\n    if (searchTerm) {\n      const searchLower = searchTerm.toLowerCase();\n      const matchesTitle = task.title.toLowerCase().includes(searchLower);\n      const project = projects?.find(p => p.id === task.project_id);\n      const matchesProject = project?.name.toLowerCase().includes(searchLower);\n      \n      if (!matchesTitle && !matchesProject) return false;\n    }\n    \n    // 상태 필터\n    if (stateFilter !== 'ALL' && task.state !== stateFilter) return false;\n    \n    // 프로젝트 필터\n    if (projectFilter !== 'ALL' && task.project_id !== projectFilter) return false;\n    \n    return true;\n  }) || [];\n\n  // 정렬\n  const sortedTasks = [...filteredTasks].sort((a, b) => {\n    let valueA: string | number | Date, valueB: string | number | Date;\n    \n    switch (sortBy) {\n      case 'title':\n        valueA = a.title.toLowerCase();\n        valueB = b.title.toLowerCase();\n        break;\n      case 'priority':\n        valueA = a.priority;\n        valueB = b.priority;\n        break;\n      case 'due_date':\n        valueA = a.due_date ? new Date(a.due_date) : new Date('9999-12-31');\n        valueB = b.due_date ? new Date(b.due_date) : new Date('9999-12-31');\n        break;\n      case 'created':\n      default:\n        valueA = new Date(a.created_at);\n        valueB = new Date(b.created_at);\n        break;\n    }\n    \n    if (valueA < valueB) return sortOrder === 'asc' ? -1 : 1;\n    if (valueA > valueB) return sortOrder === 'asc' ? 1 : -1;\n    return 0;\n  });\n\n  // 통계 계산 (전체 작업 기준)\n  const stats = {\n    total: tasks?.length || 0,\n    backlog: tasks?.filter(t => t.state === TaskState.BACKLOG).length || 0,\n    inProgress: tasks?.filter(t => t.state === TaskState.IN_PROGRESS).length || 0,\n    done: tasks?.filter(t => t.state === TaskState.DONE).length || 0,\n    paused: tasks?.filter(t => t.state === TaskState.PAUSED).length || 0,\n    canceled: tasks?.filter(t => t.state === TaskState.CANCELED).length || 0,\n  };\n\n  // 필터링된 통계\n  const filteredStats = {\n    total: sortedTasks.length,\n    backlog: sortedTasks.filter(t => t.state === TaskState.BACKLOG).length,\n    inProgress: sortedTasks.filter(t => t.state === TaskState.IN_PROGRESS).length,\n    done: sortedTasks.filter(t => t.state === TaskState.DONE).length,\n    paused: sortedTasks.filter(t => t.state === TaskState.PAUSED).length,\n    canceled: sortedTasks.filter(t => t.state === TaskState.CANCELED).length,\n  };\n\n  const getStateInfo = (state: TaskState) => {\n    return stateConfig[state] || { label: state, variant: 'outline' as const };\n  };\n\n  const getPriorityLabel = (priority: number) => {\n    switch (priority) {\n      case 1: return '최고';\n      case 2: return '높음';\n      case 3: return '보통';\n      case 4: return '낮음';\n      case 5: return '최하';\n      default: return priority.toString();\n    }\n  };\n\n  const handleStateChange = async (taskId: number, newState: TaskState) => {\n    try {\n      await updateTaskState.mutateAsync({ id: taskId, data: { state: newState } });\n      toast.success('작업 상태가 변경되었습니다');\n    } catch (error: unknown) {\n      const errorMessage = ((error as ApiError)?.response?.data?.detail) || '상태 변경에 실패했습니다';\n      toast.error(errorMessage);\n    }\n  };\n\n  if (tasksLoading || projectsLoading) {\n    return (\n      <div className=\"container mx-auto p-6\">\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"text-center space-y-4\">\n            <div className=\"animate-spin rounded-full h-16 w-16 border-4 border-primary border-t-transparent mx-auto\"></div>\n            <p className=\"text-muted-foreground\">작업을 불러오는 중...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto p-6 space-y-6\">\n      {/* 헤더 */}\n      <div className=\"flex flex-col gap-4\">\n        <div className=\"flex justify-between items-start\">\n          <div>\n            <h1 className=\"text-3xl font-bold flex items-center gap-2\">\n              <CheckSquare className=\"h-8 w-8\" />\n              작업 관리\n            </h1>\n            <p className=\"text-muted-foreground\">\n              전체 작업 현황 및 상태 관리 - 모든 프로젝트의 작업을 한 곳에서\n            </p>\n          </div>\n          <CreateTaskDialog />\n        </div>\n\n        {/* 검색 및 필터 */}\n        <div className=\"flex flex-col md:flex-row gap-4\">\n          {/* 검색바 */}\n          <div className=\"relative flex-1 max-w-md\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n            <Input\n              placeholder=\"작업명이나 프로젝트명으로 검색...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10\"\n            />\n          </div>\n\n          {/* 필터 */}\n          <div className=\"flex gap-2\">\n            <Select value={stateFilter.toString()} onValueChange={(value) => setStateFilter(value as TaskState | 'ALL')}>\n              <SelectTrigger className=\"w-[140px]\">\n                <Filter className=\"mr-2 h-4 w-4\" />\n                <SelectValue placeholder=\"상태\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"ALL\">모든 상태</SelectItem>\n                {Object.entries(TaskState).map(([key, value]) => {\n                  const config = stateConfig[value];\n                  return (\n                    <SelectItem key={value} value={value}>\n                      <div className=\"flex items-center gap-2\">\n                        <config.icon className=\"h-4 w-4\" />\n                        {config.label}\n                      </div>\n                    </SelectItem>\n                  );\n                })}\n              </SelectContent>\n            </Select>\n\n            <Select value={projectFilter.toString()} onValueChange={(value) => setProjectFilter(value === 'ALL' ? 'ALL' : parseInt(value))}>\n              <SelectTrigger className=\"w-[180px]\">\n                <SelectValue placeholder=\"프로젝트\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"ALL\">모든 프로젝트</SelectItem>\n                {projects?.map((project) => (\n                  <SelectItem key={project.id} value={project.id!.toString()}>\n                    {project.name}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n\n            <Select value={`${sortBy}-${sortOrder}`} onValueChange={(value) => {\n              const [newSortBy, newSortOrder] = value.split('-') as [SortBy, SortOrder];\n              setSortBy(newSortBy);\n              setSortOrder(newSortOrder);\n            }}>\n              <SelectTrigger className=\"w-[140px]\">\n                <SortAsc className=\"mr-2 h-4 w-4\" />\n                <SelectValue placeholder=\"정렬\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"created-desc\">최신순</SelectItem>\n                <SelectItem value=\"created-asc\">오래된순</SelectItem>\n                <SelectItem value=\"title-asc\">이름순 (A-Z)</SelectItem>\n                <SelectItem value=\"title-desc\">이름순 (Z-A)</SelectItem>\n                <SelectItem value=\"priority-asc\">우선순위 (낮음)</SelectItem>\n                <SelectItem value=\"priority-desc\">우선순위 (높음)</SelectItem>\n                <SelectItem value=\"due_date-asc\">마감일 (빠름)</SelectItem>\n                <SelectItem value=\"due_date-desc\">마감일 (늦음)</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n      </div>\n\n      {/* 통계 카드 */}\n      <div className=\"grid grid-cols-2 md:grid-cols-6 gap-4\">\n        {Object.entries(stats).map(([key, value]) => {\n          const config = key === 'total' ? null : stateConfig[key as TaskState];\n          const Icon = config?.icon || CheckSquare;\n          const filteredValue = filteredStats[key as keyof typeof filteredStats];\n          \n          return (\n            <Card \n              key={key} \n              className={`cursor-pointer hover:shadow-md transition-shadow ${\n                (key === 'total' && stateFilter === 'ALL') || \n                (stateFilter === key.toUpperCase()) ? 'ring-2 ring-primary' : ''\n              }`}\n              onClick={() => setStateFilter(key === 'total' ? 'ALL' : key.toUpperCase() as TaskState)}\n            >\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium\">\n                      {key === 'total' ? '전체' :\n                       key === 'backlog' ? '대기' :\n                       key === 'inProgress' ? '진행중' :\n                       key === 'done' ? '완료' :\n                       key === 'paused' ? '중단' :\n                       '취소'}\n                    </p>\n                    <p className=\"text-2xl font-bold\">\n                      {searchTerm || projectFilter !== 'ALL' ? filteredValue : value}\n                    </p>\n                    {(searchTerm || projectFilter !== 'ALL') && value !== filteredValue && (\n                      <p className=\"text-xs text-muted-foreground\">전체: {value}</p>\n                    )}\n                  </div>\n                  <Icon className=\"h-8 w-8 text-muted-foreground\" />\n                </div>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n\n      {/* 작업 목록 */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <CardTitle>작업 목록</CardTitle>\n              <CardDescription>\n                {sortedTasks.length ? (\n                  <>\n                    {sortedTasks.length}개의 작업\n                    {(searchTerm || stateFilter !== 'ALL' || projectFilter !== 'ALL') && \n                     ` (전체 ${tasks?.length || 0}개 중)`\n                    }\n                  </>\n                ) : (\n                  \"조건에 맞는 작업이 없습니다\"\n                )}\n              </CardDescription>\n            </div>\n            \n            {/* 필터 상태 표시 */}\n            {(searchTerm || stateFilter !== 'ALL' || projectFilter !== 'ALL') && (\n              <div className=\"flex items-center gap-2\">\n                {searchTerm && (\n                  <Badge variant=\"outline\">\n                    검색: {searchTerm}\n                    <X className=\"ml-1 h-3 w-3 cursor-pointer\" onClick={() => setSearchTerm('')} />\n                  </Badge>\n                )}\n                {stateFilter !== 'ALL' && (\n                  <Badge variant=\"outline\">\n                    상태: {stateConfig[stateFilter].label}\n                    <X className=\"ml-1 h-3 w-3 cursor-pointer\" onClick={() => setStateFilter('ALL')} />\n                  </Badge>\n                )}\n                {projectFilter !== 'ALL' && (\n                  <Badge variant=\"outline\">\n                    프로젝트: {projects?.find(p => p.id === projectFilter)?.name}\n                    <X className=\"ml-1 h-3 w-3 cursor-pointer\" onClick={() => setProjectFilter('ALL')} />\n                  </Badge>\n                )}\n                <Button \n                  variant=\"ghost\" \n                  size=\"sm\" \n                  onClick={() => {\n                    setSearchTerm('');\n                    setStateFilter('ALL');\n                    setProjectFilter('ALL');\n                  }}\n                >\n                  전체 초기화\n                </Button>\n              </div>\n            )}\n          </div>\n        </CardHeader>\n        <CardContent>\n          {sortedTasks.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <CheckSquare className=\"h-16 w-16 mx-auto text-muted-foreground mb-4\" />\n              <h3 className=\"text-lg font-semibold mb-2\">\n                {!tasks?.length ? \"작업이 없습니다\" : \"조건에 맞는 작업이 없습니다\"}\n              </h3>\n              <p className=\"text-muted-foreground mb-4\">\n                {!tasks?.length ? \n                  \"새로운 작업을 생성해보세요\" : \n                  \"다른 검색어나 필터를 사용해보세요\"\n                }\n              </p>\n              {!tasks?.length && <CreateTaskDialog />}\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {sortedTasks.map((task) => {\n                const project = projects?.find(p => p.id === task.project_id);\n                const stateInfo = getStateInfo(task.state);\n                const priorityLabel = getPriorityLabel(task.priority);\n                \n                return (\n                  <Card key={task.id} className=\"border-l-4 border-l-blue-500 hover:shadow-sm transition-shadow\">\n                    <CardHeader className=\"pb-3\">\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center gap-2 mb-2\">\n                            <h3 className=\"text-xl font-semibold\">{task.title}</h3>\n                            <Badge variant={stateInfo.variant}>\n                              {stateInfo.label}\n                            </Badge>\n                          </div>\n                          <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                            <div className=\"flex items-center gap-1\">\n                              <User className=\"h-4 w-4\" />\n                              <Link \n                                href={`/projects/${task.project_id}`}\n                                className=\"hover:underline\"\n                              >\n                                {project?.name || `프로젝트 ${task.project_id}`}\n                              </Link>\n                            </div>\n                            {task.due_date && (\n                              <div className=\"flex items-center gap-1\">\n                                <Calendar className=\"h-4 w-4\" />\n                                {format(new Date(task.due_date), 'yyyy-MM-dd')}\n                              </div>\n                            )}\n                            <div className=\"flex items-center gap-1\">\n                              <Target className=\"h-4 w-4\" />\n                              우선순위: {priorityLabel}\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <Button \n                            variant=\"outline\" \n                            size=\"sm\"\n                            asChild\n                          >\n                            <Link href={`/tasks/${task.id}`}>\n                              상세보기\n                            </Link>\n                          </Button>\n                          <Button \n                            variant=\"ghost\" \n                            size=\"sm\"\n                            asChild\n                          >\n                            <Link href={`/projects/${task.project_id}`}>\n                              프로젝트 보기\n                            </Link>\n                          </Button>\n                        </div>\n                      </div>\n                    </CardHeader>\n                    \n                    <CardContent>\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                          <span>생성: {format(new Date(task.created_at), 'MM/dd')}</span>\n                          <span>컨텍스트 스위치: {task.context_switch_count || 0}회</span>\n                          <span>재작업: {task.rework_count || 0}회</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          {Object.values(TaskState).map((state) => (\n                            <Button\n                              key={state}\n                              variant={task.state === state ? \"default\" : \"outline\"}\n                              size=\"sm\"\n                              onClick={() => handleStateChange(task.id!, state)}\n                              disabled={updateTaskState.isPending}\n                              className=\"min-w-[80px]\"\n                            >\n                              {getStateInfo(state).label}\n                            </Button>\n                          ))}\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                );\n              })}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}