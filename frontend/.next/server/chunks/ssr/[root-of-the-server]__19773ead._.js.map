{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport type {\n  Project,\n  Task,\n  Brief,\n  DoD,\n  DecisionLog,\n  Review,\n  Sample,\n  KPIData,\n  Notification,\n  NotificationSettings,\n  NotificationStats,\n  NotificationStatus,\n  UnifiedSearchResponse,\n  SimilarProject,\n  DecisionPattern,\n  ContentSummary,\n  Template,\n  TemplateRecommendation,\n  BestPractice,\n  TemplateStats,\n  TemplateCategory,\n  TemplateType,\n  CreateProjectForm,\n  CreateTaskForm,\n  UpdateTaskStateForm,\n  CreateBriefForm,\n  User,\n  ProjectMember,\n  ProjectInvite,\n  ApprovalWorkflow,\n  ApprovalResponse,\n  TeamDecision,\n  DecisionVote,\n  DecisionComment,\n  DecisionStats,\n  UserWorkload,\n  UserRole,\n  SharePermission,\n  ApprovalStatus\n} from '@/types';\n\n// API 클라이언트 설정\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 에러 핸들링\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Projects API\nexport const projectsApi = {\n  getAll: () => apiClient.get<Project[]>('/projects'),\n  getById: (id: number) => apiClient.get<Project>(`/projects/${id}`),\n  create: (data: CreateProjectForm) => apiClient.post<Project>('/projects', data),\n  update: (id: number, data: Partial<Project>) => \n    apiClient.patch<Project>(`/projects/${id}`, data),\n  delete: (id: number) => apiClient.delete(`/projects/${id}`),\n};\n\n// Tasks API  \nexport const tasksApi = {\n  getAll: () => apiClient.get<Task[]>('/tasks'),\n  getById: (id: number) => apiClient.get<Task>(`/tasks/${id}`),\n  create: (data: CreateTaskForm) => apiClient.post<Task>('/tasks', data),\n  updateState: (id: number, data: UpdateTaskStateForm) =>\n    apiClient.patch<Task>(`/tasks/${id}/state`, data),\n  update: (id: number, data: Partial<Task>) =>\n    apiClient.patch<Task>(`/tasks/${id}`, data),\n  delete: (id: number) => apiClient.delete(`/tasks/${id}`),\n};\n\n// Briefs API\nexport const briefsApi = {\n  getAll: () => apiClient.get<Brief[]>('/briefs'),\n  getByTaskId: (taskId: number) => apiClient.get<Brief>(`/briefs/task/${taskId}`),\n  create: (data: CreateBriefForm) => apiClient.post<Brief>('/briefs', data),\n  update: (id: number, data: Partial<Brief>) =>\n    apiClient.patch<Brief>(`/briefs/${id}`, data),\n  delete: (id: number) => apiClient.delete(`/briefs/${id}`),\n};\n\n// DoD API\nexport const dodApi = {\n  getAll: () => apiClient.get<DoD[]>('/dod'),\n  getByTaskId: (taskId: number) => apiClient.get<DoD>(`/dod/task/${taskId}`),\n  create: (data: Partial<DoD>) => apiClient.post<DoD>('/dod', data),\n  update: (id: number, data: Partial<DoD>) =>\n    apiClient.patch<DoD>(`/dod/${id}`, data),\n  delete: (id: number) => apiClient.delete(`/dod/${id}`),\n};\n\n// Decisions API\nexport const decisionsApi = {\n  getAll: () => apiClient.get<DecisionLog[]>('/decisions'),\n  getByTaskId: (taskId: number) => apiClient.get<DecisionLog[]>(`/decisions/task/${taskId}`),\n  create: (data: Partial<DecisionLog>) => apiClient.post<DecisionLog>('/decisions', data),\n  updateDPlus7: (id: number, review: string) =>\n    apiClient.patch<DecisionLog>(`/decisions/${id}/dplus7`, { d_plus_7_review: review }),\n  delete: (id: number) => apiClient.delete(`/decisions/${id}`),\n};\n\n// Reviews API\nexport const reviewsApi = {\n  getAll: () => apiClient.get<Review[]>('/reviews'),\n  getByTaskId: (taskId: number) => apiClient.get<Review[]>(`/reviews/task/${taskId}`),\n  create: (data: Partial<Review>) => apiClient.post<Review>('/reviews', data),\n  update: (id: number, data: Partial<Review>) =>\n    apiClient.patch<Review>(`/reviews/${id}`, data),\n  delete: (id: number) => apiClient.delete(`/reviews/${id}`),\n};\n\n// Samples API\nexport const samplesApi = {\n  getAll: () => apiClient.get<Sample[]>('/samples'),\n  getByTaskId: (taskId: number) => apiClient.get<Sample[]>(`/samples/task/${taskId}`),\n  create: (data: Partial<Sample>) => apiClient.post<Sample>('/samples', data),\n  update: (id: number, data: Partial<Sample>) =>\n    apiClient.patch<Sample>(`/samples/${id}`, data),\n  delete: (id: number) => apiClient.delete(`/samples/${id}`),\n};\n\n// Dashboard API\nexport const dashboardApi = {\n  getKPIs: () => apiClient.get<KPIData>('/dashboard/kpi'),\n};\n\n// Exports API\nexport const exportsApi = {\n  exportProjectMd: (projectId: number) =>\n    apiClient.get<string>(`/exports/project/${projectId}/md`),\n};\n\n// Notifications API\nexport const notificationsApi = {\n  getAll: (status?: NotificationStatus, limit?: number) => {\n    const params = new URLSearchParams();\n    if (status) params.append('status', status);\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<Notification[]>(`/notifications?${params.toString()}`);\n  },\n  getPending: () => apiClient.get<Notification[]>('/notifications/pending'),\n  generate: () => apiClient.post<{message: string; count: number}>('/notifications/generate'),\n  markRead: (id: number) => apiClient.patch<{message: string}>(`/notifications/${id}/mark-read`),\n  dismiss: (id: number) => apiClient.patch<{message: string}>(`/notifications/${id}/dismiss`),\n  getSettings: () => apiClient.get<NotificationSettings>('/notifications/settings'),\n  updateSettings: (settings: Partial<NotificationSettings>) => \n    apiClient.patch<{message: string; settings: NotificationSettings}>('/notifications/settings', settings),\n  getStats: () => apiClient.get<NotificationStats>('/notifications/stats'),\n};\n\n// Search API\nexport const searchApi = {\n  unified: (query: string, types?: string[], limit?: number) => {\n    const params = new URLSearchParams({ q: query });\n    if (types && types.length > 0) {\n      types.forEach(type => params.append('types', type));\n    }\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<UnifiedSearchResponse>(`/search?${params.toString()}`);\n  },\n  similarProjects: (projectId: number, limit?: number) => {\n    const params = new URLSearchParams();\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<{project_id: number; similar_projects: SimilarProject[]}>\n      (`/search/similar-projects/${projectId}?${params.toString()}`);\n  },\n  decisionPatterns: (query: string, limit?: number) => {\n    const params = new URLSearchParams({ q: query });\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<{query: string; decision_patterns: DecisionPattern[]}>\n      (`/search/decision-patterns?${params.toString()}`);\n  },\n  projectSuggestions: (projectId: number) => \n    apiClient.get(`/search/suggestions/${projectId}`),\n  stats: () => apiClient.get<{\n    content_summary: ContentSummary;\n    search_capabilities: Record<string, string>;\n    supported_content_types: Array<{type: string; description: string}>;\n  }>('/search/stats'),\n};\n\n// Templates API\nexport const templatesApi = {\n  getAll: (category?: TemplateCategory, templateType?: TemplateType, includeSystem?: boolean, includeAI?: boolean, limit?: number) => {\n    const params = new URLSearchParams();\n    if (category) params.append('category', category);\n    if (templateType) params.append('template_type', templateType);\n    if (includeSystem !== undefined) params.append('include_system', includeSystem.toString());\n    if (includeAI !== undefined) params.append('include_ai', includeAI.toString());\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<{templates: Template[]; total: number}>(`/templates?${params.toString()}`);\n  },\n  getById: (id: number) => apiClient.get<Template>(`/templates/${id}`),\n  getRecommended: (keywords: string, limit?: number) => {\n    const params = new URLSearchParams({ keywords });\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<{keywords: string[]; recommendations: TemplateRecommendation[]}>\n      (`/templates/recommend?${params.toString()}`);\n  },\n  generateFromProject: (projectId: number) => \n    apiClient.post<{message: string; generated_templates: Template[]}>(`/templates/generate-from-project/${projectId}`),\n  recordUsage: (templateId: number, usageData: {used_for: string; was_helpful?: boolean; feedback_notes?: string}) => \n    apiClient.post(`/templates/${templateId}/use`, usageData),\n  getCategories: () => apiClient.get<{categories: Array<{value: TemplateCategory; label: string; description: string}>}>\n    ('/templates/categories/stats'),\n  getBestPractices: (category?: TemplateCategory, limit?: number) => {\n    const params = new URLSearchParams();\n    if (category) params.append('category', category);\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<{best_practices: BestPractice[]; total: number}>\n      (`/templates/best-practices/?${params.toString()}`);\n  },\n  getStats: () => apiClient.get<{template_stats: TemplateStats; summary: Record<string, unknown>}>('/templates/stats/overview'),\n  initSystemTemplates: () => apiClient.post<{message: string}>('/templates/init-system-templates'),\n};\n\n// Collaboration API\nexport const collaborationApi = {\n  // 사용자 관리\n  createUser: (userData: {username: string; email: string; full_name?: string}) =>\n    apiClient.post<{user: User}>('/collaboration/users', userData),\n  \n  getUserProjects: (userId: number, includeShared: boolean = true) =>\n    apiClient.get<{user_id: number; projects: Project[]; total: number}>\n      (`/collaboration/users/${userId}/projects?include_shared=${includeShared}`),\n  \n  getUserWorkload: (userId: number, projectId?: number) => {\n    const params = new URLSearchParams();\n    if (projectId) params.append('project_id', projectId.toString());\n    return apiClient.get<{user_id: number; project_id?: number; workload: UserWorkload}>\n      (`/collaboration/users/${userId}/workload?${params.toString()}`);\n  },\n\n  // 프로젝트 공유\n  shareProject: (projectId: number, shareData: {\n    target_user_id?: number;\n    target_email?: string;\n    role: UserRole;\n    permissions: SharePermission;\n  }, ownerId: number) =>\n    apiClient.post<{message: string; invite: ProjectInvite}>\n      (`/collaboration/projects/${projectId}/share?owner_id=${ownerId}`, shareData),\n\n  acceptInvite: (inviteToken: string, userId: number) =>\n    apiClient.post<{message: string; membership: ProjectMember}>\n      (`/collaboration/invites/${inviteToken}/accept?user_id=${userId}`),\n\n  getProjectMembers: (projectId: number) =>\n    apiClient.get<{project_id: number; members: ProjectMember[]; total: number}>\n      (`/collaboration/projects/${projectId}/members`),\n\n  // 태스크 할당\n  assignTask: (taskId: number, assigneeId: number, assignerId: number) =>\n    apiClient.patch<{message: string; task: Task}>\n      (`/collaboration/tasks/${taskId}/assign?assigner_id=${assignerId}`, {assignee_id: assigneeId}),\n\n  // 승인 워크플로우\n  createApprovalWorkflow: (projectId: number, approvalData: {\n    title: string;\n    description: string;\n    approver_user_ids: number[];\n    required_approvers: number;\n    task_id?: number;\n    decision_id?: number;\n  }, requestedById: number) =>\n    apiClient.post<{message: string; workflow: ApprovalWorkflow}>\n      (`/collaboration/projects/${projectId}/approvals?requested_by_id=${requestedById}`, approvalData),\n\n  respondToApproval: (workflowId: number, responseData: {\n    is_approved: boolean;\n    comment?: string;\n  }, approverId: number) =>\n    apiClient.post<{message: string; response: ApprovalResponse}>\n      (`/collaboration/approvals/${workflowId}/respond?approver_id=${approverId}`, responseData),\n\n  getApprovalWorkflow: (workflowId: number) =>\n    apiClient.get<{workflow: ApprovalWorkflow; responses: ApprovalResponse[]}>\n      (`/collaboration/approvals/${workflowId}`),\n\n  // 팀 의사결정\n  createTeamDecision: (projectId: number, decisionData: {\n    title: string;\n    description: string;\n    options: string[];\n    task_id?: number;\n    is_voting_enabled: boolean;\n    voting_deadline?: string;\n    allow_multiple_votes: boolean;\n  }, createdById: number) =>\n    apiClient.post<{message: string; decision: TeamDecision}>\n      (`/collaboration/projects/${projectId}/decisions?created_by_id=${createdById}`, decisionData),\n\n  castVote: (decisionId: number, voteData: {\n    selected_options: string[];\n    reasoning?: string;\n  }, voterId: number) =>\n    apiClient.post<{message: string; vote: DecisionVote}>\n      (`/collaboration/decisions/${decisionId}/vote?voter_id=${voterId}`, voteData),\n\n  concludeDecision: (decisionId: number, conclusionData: {\n    final_decision: string;\n    decision_rationale?: string;\n  }, concluderId: number) =>\n    apiClient.patch<{message: string; decision: TeamDecision}>\n      (`/collaboration/decisions/${decisionId}/conclude?concluder_id=${concluderId}`, conclusionData),\n\n  addDecisionComment: (decisionId: number, commentData: {\n    content: string;\n    parent_comment_id?: number;\n  }, authorId: number) =>\n    apiClient.post<{message: string; comment: DecisionComment}>\n      (`/collaboration/decisions/${decisionId}/comments?author_id=${authorId}`, commentData),\n\n  getTeamDecision: (decisionId: number) =>\n    apiClient.get<{\n      decision: TeamDecision;\n      votes: DecisionVote[];\n      comments: DecisionComment[];\n      stats: DecisionStats;\n    }>(`/collaboration/decisions/${decisionId}`),\n\n  getDecisionStats: (decisionId: number) =>\n    apiClient.get<{decision_id: number; stats: DecisionStats}>\n      (`/collaboration/decisions/${decisionId}/stats`),\n};\n\nexport default apiClient;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/services/briefs.ts"],"sourcesContent":["import api from \"./api\";\nimport { Brief, BriefCreate, BriefUpdate } from \"@/types/brief\";\n\n// 409(이미 존재)도 정상 흐름으로 취급하도록 처리\nexport const createBrief = async (data: BriefCreate): Promise<Brief | null> => {\n  try {\n    const res = await api.post<Brief>(\"/briefs\", data, {\n      // 200/201: 생성 성공, 409: 이미 존재 (예외 던지지 않음)\n      validateStatus: (s) => s === 200 || s === 201 || s === 409,\n    });\n    // 409면 UI에서 안내만 하고 null 반환\n    return res.status === 409 ? null : res.data;\n  } catch {\n    // 네트워크/타임아웃 등은 조용히 null\n    return null;\n  }\n};\n\nexport const getBriefByTask = async (taskId: number): Promise<Brief | null> => {\n  try {\n    const res = await api.get<Brief>(`/briefs/task/${taskId}`, {\n      // 200: 존재, 404: 없음 — 둘 다 예외 던지지 않음\n      validateStatus: (s) => s === 200 || s === 404,\n    });\n    return res.status === 200 ? res.data : null; // 404면 null\n  } catch {\n    // 네트워크/타임아웃 등만 조용히 null\n    return null;\n  }\n};\n\nexport const updateBrief = (id: number, data: BriefUpdate) =>\n  api.patch<Brief>(`/briefs/${id}`, data).then(r => r.data);\n\nexport const deleteBrief = (id: number) =>\n  api.delete(`/briefs/${id}`).then(r => r.data);"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAIO,MAAM,cAAc,OAAO;IAChC,IAAI;QACF,MAAM,MAAM,MAAM,iIAAG,CAAC,IAAI,CAAQ,WAAW,MAAM;YACjD,yCAAyC;YACzC,gBAAgB,CAAC,IAAM,MAAM,OAAO,MAAM,OAAO,MAAM;QACzD;QACA,2BAA2B;QAC3B,OAAO,IAAI,MAAM,KAAK,MAAM,OAAO,IAAI,IAAI;IAC7C,EAAE,OAAM;QACN,wBAAwB;QACxB,OAAO;IACT;AACF;AAEO,MAAM,iBAAiB,OAAO;IACnC,IAAI;QACF,MAAM,MAAM,MAAM,iIAAG,CAAC,GAAG,CAAQ,CAAC,aAAa,EAAE,QAAQ,EAAE;YACzD,mCAAmC;YACnC,gBAAgB,CAAC,IAAM,MAAM,OAAO,MAAM;QAC5C;QACA,OAAO,IAAI,MAAM,KAAK,MAAM,IAAI,IAAI,GAAG,MAAM,YAAY;IAC3D,EAAE,OAAM;QACN,wBAAwB;QACxB,OAAO;IACT;AACF;AAEO,MAAM,cAAc,CAAC,IAAY,OACtC,iIAAG,CAAC,KAAK,CAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI;AAEnD,MAAM,cAAc,CAAC,KAC1B,iIAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI","debugId":null}},
    {"offset": {"line": 460, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/hooks/use-dashboard.ts"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport { dashboardApi } from '@/services/api';\n\n// Query Keys\nexport const dashboardKeys = {\n  all: ['dashboard'] as const,\n  kpis: () => [...dashboardKeys.all, 'kpis'] as const,\n};\n\n// Queries\nexport function useKPIs() {\n  return useQuery({\n    queryKey: dashboardKeys.kpis(),\n    queryFn: () => dashboardApi.getKPIs().then(res => res.data),\n    refetchInterval: 30000, // 30초마다 자동 갱신\n  });\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGO,MAAM,gBAAgB;IAC3B,KAAK;QAAC;KAAY;IAClB,MAAM,IAAM;eAAI,cAAc,GAAG;YAAE;SAAO;AAC5C;AAGO,SAAS;IACd,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,cAAc,IAAI;QAC5B,SAAS,IAAM,sIAAY,CAAC,OAAO,GAAG,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI;QAC1D,iBAAiB;IACnB;AACF","debugId":null}},
    {"offset": {"line": 490, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/hooks/use-projects.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { projectsApi } from '@/services/api';\nimport type { CreateProjectForm, Project } from '@/types';\nimport { dashboardKeys } from './use-dashboard';\n\n// Query Keys\nexport const projectKeys = {\n  all: ['projects'] as const,\n  lists: () => [...projectKeys.all, 'list'] as const,\n  list: (filters: string) => [...projectKeys.lists(), { filters }] as const,\n  details: () => [...projectKeys.all, 'detail'] as const,\n  detail: (id: number) => [...projectKeys.details(), id] as const,\n};\n\n// Queries\nexport function useProjects() {\n  return useQuery({\n    queryKey: projectKeys.lists(),\n    queryFn: () => projectsApi.getAll().then(res => res.data),\n  });\n}\n\nexport function useProject(id: number) {\n  return useQuery({\n    queryKey: projectKeys.detail(id),\n    queryFn: () => projectsApi.getById(id).then(res => res.data),\n    enabled: !!id,\n  });\n}\n\n// Mutations\nexport function useCreateProject() {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (data: CreateProjectForm) =>\n      projectsApi.create(data).then(res => res.data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      // KPI 대시보드도 무효화\n      queryClient.invalidateQueries({ queryKey: dashboardKeys.kpis() });\n    },\n  });\n}\n\nexport function useUpdateProject() {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ id, data }: { id: number; data: Partial<Project> }) =>\n      projectsApi.update(id, data).then(res => res.data),\n    onSuccess: (updatedProject) => {\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      queryClient.setQueryData(\n        projectKeys.detail(updatedProject.id!), \n        updatedProject\n      );\n      queryClient.invalidateQueries({ queryKey: dashboardKeys.kpis() });\n    },\n  });\n}\n\nexport function useDeleteProject() {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (id: number) => projectsApi.delete(id),\n    onSuccess: (_, id) => {\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      queryClient.removeQueries({ queryKey: projectKeys.detail(id) });\n      queryClient.invalidateQueries({ queryKey: dashboardKeys.kpis() });\n    },\n  });\n}"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA;AAEA;;;;AAGO,MAAM,cAAc;IACzB,KAAK;QAAC;KAAW;IACjB,OAAO,IAAM;eAAI,YAAY,GAAG;YAAE;SAAO;IACzC,MAAM,CAAC,UAAoB;eAAI,YAAY,KAAK;YAAI;gBAAE;YAAQ;SAAE;IAChE,SAAS,IAAM;eAAI,YAAY,GAAG;YAAE;SAAS;IAC7C,QAAQ,CAAC,KAAe;eAAI,YAAY,OAAO;YAAI;SAAG;AACxD;AAGO,SAAS;IACd,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,YAAY,KAAK;QAC3B,SAAS,IAAM,qIAAW,CAAC,MAAM,GAAG,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI;IAC1D;AACF;AAEO,SAAS,WAAW,EAAU;IACnC,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,YAAY,MAAM,CAAC;QAC7B,SAAS,IAAM,qIAAW,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI;QAC3D,SAAS,CAAC,CAAC;IACb;AACF;AAGO,SAAS;IACd,MAAM,cAAc,IAAA,wMAAc;IAElC,OAAO,IAAA,6LAAW,EAAC;QACjB,YAAY,CAAC,OACX,qIAAW,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI;QAC/C,WAAW;YACT,YAAY,iBAAiB,CAAC;gBAAE,UAAU,YAAY,KAAK;YAAG;YAC9D,gBAAgB;YAChB,YAAY,iBAAiB,CAAC;gBAAE,UAAU,iJAAa,CAAC,IAAI;YAAG;QACjE;IACF;AACF;AAEO,SAAS;IACd,MAAM,cAAc,IAAA,wMAAc;IAElC,OAAO,IAAA,6LAAW,EAAC;QACjB,YAAY,CAAC,EAAE,EAAE,EAAE,IAAI,EAA0C,GAC/D,qIAAW,CAAC,MAAM,CAAC,IAAI,MAAM,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI;QACnD,WAAW,CAAC;YACV,YAAY,iBAAiB,CAAC;gBAAE,UAAU,YAAY,KAAK;YAAG;YAC9D,YAAY,YAAY,CACtB,YAAY,MAAM,CAAC,eAAe,EAAE,GACpC;YAEF,YAAY,iBAAiB,CAAC;gBAAE,UAAU,iJAAa,CAAC,IAAI;YAAG;QACjE;IACF;AACF;AAEO,SAAS;IACd,MAAM,cAAc,IAAA,wMAAc;IAElC,OAAO,IAAA,6LAAW,EAAC;QACjB,YAAY,CAAC,KAAe,qIAAW,CAAC,MAAM,CAAC;QAC/C,WAAW,CAAC,GAAG;YACb,YAAY,iBAAiB,CAAC;gBAAE,UAAU,YAAY,KAAK;YAAG;YAC9D,YAAY,aAAa,CAAC;gBAAE,UAAU,YAAY,MAAM,CAAC;YAAI;YAC7D,YAAY,iBAAiB,CAAC;gBAAE,UAAU,iJAAa,CAAC,IAAI;YAAG;QACjE;IACF;AACF","debugId":null}},
    {"offset": {"line": 599, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/hooks/use-tasks.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { tasksApi } from '@/services/api';\nimport type { CreateTaskForm, Task, UpdateTaskStateForm } from '@/types';\nimport { projectKeys } from './use-projects';\nimport { dashboardKeys } from './use-dashboard';\n\n// Query Keys\nexport const taskKeys = {\n  all: ['tasks'] as const,\n  lists: () => [...taskKeys.all, 'list'] as const,\n  list: (filters: string) => [...taskKeys.lists(), { filters }] as const,\n  details: () => [...taskKeys.all, 'detail'] as const,\n  detail: (id: number) => [...taskKeys.details(), id] as const,\n};\n\n// Queries\nexport function useTasks() {\n  return useQuery({\n    queryKey: taskKeys.lists(),\n    queryFn: () => tasksApi.getAll().then(res => res.data),\n  });\n}\n\nexport function useTask(id: number) {\n  return useQuery({\n    queryKey: taskKeys.detail(id),\n    queryFn: () => tasksApi.getById(id).then(res => res.data),\n    enabled: !!id,\n  });\n}\n\n// Mutations\nexport function useCreateTask() {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (data: CreateTaskForm) =>\n      tasksApi.create(data).then(res => res.data),\n    onSuccess: () => {\n      // 작업 목록 무효화\n      queryClient.invalidateQueries({ queryKey: taskKeys.lists() });\n      // 프로젝트 목록도 무효화 (작업 수 업데이트)\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      // KPI 대시보드도 무효화\n      queryClient.invalidateQueries({ queryKey: dashboardKeys.kpis() });\n    },\n  });\n}\n\nexport function useUpdateTaskState() {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ id, data }: { id: number; data: UpdateTaskStateForm }) =>\n      tasksApi.updateState(id, data).then(res => res.data),\n    onSuccess: (updatedTask) => {\n      queryClient.invalidateQueries({ queryKey: taskKeys.lists() });\n      queryClient.setQueryData(\n        taskKeys.detail(updatedTask.id!), \n        updatedTask\n      );\n      // KPI 대시보드 무효화 (상태 변경이 KPI에 영향)\n      queryClient.invalidateQueries({ queryKey: dashboardKeys.kpis() });\n    },\n  });\n}\n\nexport function useUpdateTask() {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: ({ id, data }: { id: number; data: Partial<Task> }) =>\n      tasksApi.update(id, data).then(res => res.data),\n    onSuccess: (updatedTask) => {\n      queryClient.invalidateQueries({ queryKey: taskKeys.lists() });\n      queryClient.setQueryData(\n        taskKeys.detail(updatedTask.id!), \n        updatedTask\n      );\n      // KPI 대시보드 무효화\n      queryClient.invalidateQueries({ queryKey: dashboardKeys.kpis() });\n    },\n  });\n}\n\nexport function useDeleteTask() {\n  const queryClient = useQueryClient();\n  \n  return useMutation({\n    mutationFn: (id: number) => tasksApi.delete(id),\n    onSuccess: (_, id) => {\n      queryClient.invalidateQueries({ queryKey: taskKeys.lists() });\n      queryClient.removeQueries({ queryKey: taskKeys.detail(id) });\n      // 프로젝트 목록과 KPI 무효화\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      queryClient.invalidateQueries({ queryKey: dashboardKeys.kpis() });\n    },\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 738, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/app/briefs/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { useQuery } from '@tanstack/react-query';\nimport { getBriefByTask } from '@/services/briefs';\nimport { useTasks } from '@/hooks/use-tasks';\nimport { useProjects } from '@/hooks/use-projects';\nimport { \n  FileText, \n  Search, \n  Calendar, \n  FolderOpen\n} from 'lucide-react';\nimport { Project, Task, Brief } from '@/types';\nimport { format, parseISO } from 'date-fns';\nimport Link from 'next/link';\n\nexport default function BriefsPage() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const { data: tasks, isLoading: tasksLoading } = useTasks();\n  const { data: projects, isLoading: projectsLoading } = useProjects();\n\n  // 프로젝트 매핑 생성\n  const projectsMap = projects?.reduce((acc, project) => {\n    acc[project.id!] = project;\n    return acc;\n  }, {} as Record<number, Project>) || {};\n\n  // Brief가 있는 task들만 필터링하고 Brief 정보 가져오기\n  const briefQueries = useQuery({\n    queryKey: ['all-briefs', tasks?.map(t => t.id).join(',')],\n    queryFn: async () => {\n      if (!tasks) return [];\n\n      const settled = await Promise.allSettled(\n        tasks.map(async (task) => {\n          const brief = await getBriefByTask(task.id!); // service returns null on any error\n          return brief ? { task, brief, project: projectsMap[task.project_id] } : null;\n        })\n      );\n\n      return settled\n        .filter((r): r is PromiseFulfilledResult<{ task: Task; brief: Brief; project: Project } | null> => r.status === 'fulfilled' && r.value !== null)\n        .map(r => r.value as { task: Task; brief: Brief; project: Project });\n    },\n    enabled: !!tasks && !!projects,\n    retry: false, // 404 에러 시 재시도하지 않음\n  });\n\n  const briefsWithTasks = briefQueries.data || [];\n\n  // 검색 필터링\n  const filteredBriefs = briefsWithTasks.filter(item => {\n    if (!searchTerm) return true;\n    const searchLower = searchTerm.toLowerCase();\n    return (\n      item.task.title.toLowerCase().includes(searchLower) ||\n      item.brief.purpose.toLowerCase().includes(searchLower) ||\n      item.brief.success_criteria.toLowerCase().includes(searchLower) ||\n      item.brief.constraints.toLowerCase().includes(searchLower) ||\n      item.brief.priority.toLowerCase().includes(searchLower) ||\n      item.brief.validation.toLowerCase().includes(searchLower) ||\n      (item.project?.name ?? '').toLowerCase().includes(searchLower)\n    );\n  });\n\n  if (tasksLoading || projectsLoading || briefQueries.isLoading) {\n    return (\n      <div className=\"container mx-auto p-6\">\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"text-center space-y-4\">\n            <div className=\"animate-spin rounded-full h-16 w-16 border-4 border-primary border-t-transparent mx-auto\"></div>\n            <p className=\"text-muted-foreground\">5SB를 불러오는 중...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto p-6 space-y-6\">\n      {/* 헤더 */}\n      <div className=\"flex flex-col gap-4\">\n        <div>\n          <h1 className=\"text-3xl font-bold flex items-center gap-2\">\n            <FileText className=\"h-8 w-8\" />\n            5문장 브리프 (5SB)\n          </h1>\n          <p className=\"text-muted-foreground\">\n            작성된 모든 5문장 브리프를 한 곳에서 관리\n          </p>\n        </div>\n\n        {/* 검색바 */}\n        <div className=\"relative max-w-md\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n          <Input\n            placeholder=\"브리프 내용, 작업명, 프로젝트명으로 검색...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"pl-10\"\n          />\n        </div>\n      </div>\n\n      {/* 통계 카드 */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-lg\">전체 5SB</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-3xl font-bold\">{briefsWithTasks.length}</div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-lg\">전체 작업</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-3xl font-bold\">{tasks?.length || 0}</div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-lg\">작성율</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-3xl font-bold\">\n              {tasks?.length ? Math.round((briefsWithTasks.length / tasks.length) * 100) : 0}%\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* 5SB 목록 */}\n      <Card>\n        <CardHeader>\n          <CardTitle>5SB 목록</CardTitle>\n          <CardDescription>\n            {filteredBriefs.length ? \n              `${filteredBriefs.length}개의 5문장 브리프` : \n              \"검색 조건에 맞는 5SB가 없습니다\"\n            }\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {filteredBriefs.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <FileText className=\"h-16 w-16 mx-auto text-muted-foreground mb-4\" />\n              <h3 className=\"text-lg font-semibold mb-2\">\n                {briefsWithTasks.length === 0 ? \"작성된 5SB가 없습니다\" : \"검색 결과가 없습니다\"}\n              </h3>\n              <p className=\"text-muted-foreground mb-4\">\n                {briefsWithTasks.length === 0 ? \n                  \"프로젝트 상세 페이지에서 작업별로 5SB를 작성해보세요\" :\n                  \"다른 검색어로 시도해보세요\"\n                }\n              </p>\n              {briefsWithTasks.length === 0 && (\n                <Button asChild>\n                  <Link href=\"/projects\">프로젝트 보기</Link>\n                </Button>\n              )}\n            </div>\n          ) : (\n            <div className=\"space-y-6\">\n              {filteredBriefs.map((item) => (\n                <Card key={item.task.id} className=\"border-l-4 border-l-blue-500\">\n                  <CardHeader>\n                    <div className=\"flex items-start justify-between\">\n                      <div>\n                        <CardTitle className=\"text-xl mb-2\">{item.task.title}</CardTitle>\n                        <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                          <div className=\"flex items-center gap-1\">\n                            <FolderOpen className=\"h-4 w-4\" />\n                            <Link \n                              href={`/projects/${item.task.project_id}`}\n                              className=\"hover:underline\"\n                            >\n                              {item.project?.name || `프로젝트 ${item.task.project_id}`}\n                            </Link>\n                          </div>\n                          <div className=\"flex items-center gap-1\">\n                            <Calendar className=\"h-4 w-4\" />\n                            {format(parseISO(item.brief.created_at), 'yyyy-MM-dd')}\n                          </div>\n                        </div>\n                      </div>\n                      <Badge variant=\"secondary\">P{item.task.priority}</Badge>\n                    </div>\n                  </CardHeader>\n                  \n                  <CardContent className=\"space-y-4\">\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                      <div>\n                        <h4 className=\"font-semibold text-sm text-muted-foreground mb-1\">1. 목적 (Purpose)</h4>\n                        <p className=\"text-sm\">{item.brief.purpose}</p>\n                      </div>\n                      \n                      <div>\n                        <h4 className=\"font-semibold text-sm text-muted-foreground mb-1\">2. 성공 기준 (Success Criteria)</h4>\n                        <p className=\"text-sm\">{item.brief.success_criteria}</p>\n                      </div>\n                      \n                      <div>\n                        <h4 className=\"font-semibold text-sm text-muted-foreground mb-1\">3. 제약사항 (Constraints)</h4>\n                        <p className=\"text-sm\">{item.brief.constraints}</p>\n                      </div>\n                      \n                      <div>\n                        <h4 className=\"font-semibold text-sm text-muted-foreground mb-1\">4. 우선순위 (Priority)</h4>\n                        <p className=\"text-sm\">{item.brief.priority}</p>\n                      </div>\n                    </div>\n                    \n                    <div>\n                      <h4 className=\"font-semibold text-sm text-muted-foreground mb-1\">5. 검증 방법 (Validation)</h4>\n                      <p className=\"text-sm\">{item.brief.validation}</p>\n                    </div>\n                    \n                    <div className=\"flex justify-end pt-2\">\n                      <Button asChild variant=\"outline\" size=\"sm\">\n                        <Link href={`/projects/${item.task.project_id}`}>\n                          작업 보기\n                        </Link>\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}