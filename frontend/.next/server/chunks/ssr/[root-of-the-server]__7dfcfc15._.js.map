{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,wKAAkB;QACjB,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,wKAAkB;QACjB,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,2KAAqB;QACpB,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,2KAAqB;QACpB,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,mNAAgB,CAG7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,0KAAqB;QACpB,WAAW,IAAA,yHAAE,EACX,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,8OAAC,2KAAsB;YACrB,WAAW,IAAA,yHAAE,EACX;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,0KAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,yKAAmB;QAClB,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport type {\n  Project,\n  Task,\n  Brief,\n  DoD,\n  DecisionLog,\n  Review,\n  Sample,\n  KPIData,\n  Notification,\n  NotificationSettings,\n  NotificationStats,\n  NotificationStatus,\n  UnifiedSearchResponse,\n  SimilarProject,\n  DecisionPattern,\n  ContentSummary,\n  Template,\n  TemplateRecommendation,\n  BestPractice,\n  TemplateStats,\n  TemplateCategory,\n  TemplateType,\n  CreateProjectForm,\n  CreateTaskForm,\n  UpdateTaskStateForm,\n  CreateBriefForm,\n  User,\n  ProjectMember,\n  ProjectInvite,\n  ApprovalWorkflow,\n  ApprovalResponse,\n  TeamDecision,\n  DecisionVote,\n  DecisionComment,\n  DecisionStats,\n  UserWorkload,\n  UserRole,\n  SharePermission,\n  ApprovalStatus\n} from '@/types';\n\n// API 클라이언트 설정\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 에러 핸들링\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Projects API\nexport const projectsApi = {\n  getAll: () => apiClient.get<Project[]>('/projects'),\n  getById: (id: number) => apiClient.get<Project>(`/projects/${id}`),\n  create: (data: CreateProjectForm) => apiClient.post<Project>('/projects', data),\n  update: (id: number, data: Partial<Project>) => \n    apiClient.patch<Project>(`/projects/${id}`, data),\n  delete: (id: number) => apiClient.delete(`/projects/${id}`),\n};\n\n// Tasks API  \nexport const tasksApi = {\n  getAll: () => apiClient.get<Task[]>('/tasks'),\n  getById: (id: number) => apiClient.get<Task>(`/tasks/${id}`),\n  create: (data: CreateTaskForm) => apiClient.post<Task>('/tasks', data),\n  updateState: (id: number, data: UpdateTaskStateForm) =>\n    apiClient.patch<Task>(`/tasks/${id}/state`, data),\n  update: (id: number, data: Partial<Task>) =>\n    apiClient.patch<Task>(`/tasks/${id}`, data),\n  delete: (id: number) => apiClient.delete(`/tasks/${id}`),\n};\n\n// Briefs API\nexport const briefsApi = {\n  getAll: () => apiClient.get<Brief[]>('/briefs'),\n  getByTaskId: (taskId: number) => apiClient.get<Brief>(`/briefs/task/${taskId}`),\n  create: (data: CreateBriefForm) => apiClient.post<Brief>('/briefs', data),\n  update: (id: number, data: Partial<Brief>) =>\n    apiClient.patch<Brief>(`/briefs/${id}`, data),\n  delete: (id: number) => apiClient.delete(`/briefs/${id}`),\n};\n\n// DoD API\nexport const dodApi = {\n  getAll: () => apiClient.get<DoD[]>('/dod'),\n  getByTaskId: (taskId: number) => apiClient.get<DoD>(`/dod/task/${taskId}`),\n  create: (data: Partial<DoD>) => apiClient.post<DoD>('/dod', data),\n  update: (id: number, data: Partial<DoD>) =>\n    apiClient.patch<DoD>(`/dod/${id}`, data),\n  delete: (id: number) => apiClient.delete(`/dod/${id}`),\n};\n\n// Decisions API\nexport const decisionsApi = {\n  getAll: () => apiClient.get<DecisionLog[]>('/decisions'),\n  getByTaskId: (taskId: number) => apiClient.get<DecisionLog[]>(`/decisions/task/${taskId}`),\n  create: (data: Partial<DecisionLog>) => apiClient.post<DecisionLog>('/decisions', data),\n  updateDPlus7: (id: number, review: string) =>\n    apiClient.patch<DecisionLog>(`/decisions/${id}/dplus7`, { d_plus_7_review: review }),\n  delete: (id: number) => apiClient.delete(`/decisions/${id}`),\n};\n\n// Reviews API\nexport const reviewsApi = {\n  getAll: () => apiClient.get<Review[]>('/reviews'),\n  getByTaskId: (taskId: number) => apiClient.get<Review[]>(`/reviews/task/${taskId}`),\n  create: (data: Partial<Review>) => apiClient.post<Review>('/reviews', data),\n  update: (id: number, data: Partial<Review>) =>\n    apiClient.patch<Review>(`/reviews/${id}`, data),\n  delete: (id: number) => apiClient.delete(`/reviews/${id}`),\n};\n\n// Samples API\nexport const samplesApi = {\n  getAll: () => apiClient.get<Sample[]>('/samples'),\n  getByTaskId: (taskId: number) => apiClient.get<Sample[]>(`/samples/task/${taskId}`),\n  create: (data: Partial<Sample>) => apiClient.post<Sample>('/samples', data),\n  update: (id: number, data: Partial<Sample>) =>\n    apiClient.patch<Sample>(`/samples/${id}`, data),\n  delete: (id: number) => apiClient.delete(`/samples/${id}`),\n};\n\n// Dashboard API\nexport const dashboardApi = {\n  getKPIs: () => apiClient.get<KPIData>('/dashboard/kpi'),\n};\n\n// Exports API\nexport const exportsApi = {\n  exportProjectMd: (projectId: number) =>\n    apiClient.get<string>(`/exports/project/${projectId}/md`),\n};\n\n// Notifications API\nexport const notificationsApi = {\n  getAll: (status?: NotificationStatus, limit?: number) => {\n    const params = new URLSearchParams();\n    if (status) params.append('status', status);\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<Notification[]>(`/notifications?${params.toString()}`);\n  },\n  getPending: () => apiClient.get<Notification[]>('/notifications/pending'),\n  generate: () => apiClient.post<{message: string; count: number}>('/notifications/generate'),\n  markRead: (id: number) => apiClient.patch<{message: string}>(`/notifications/${id}/mark-read`),\n  dismiss: (id: number) => apiClient.patch<{message: string}>(`/notifications/${id}/dismiss`),\n  getSettings: () => apiClient.get<NotificationSettings>('/notifications/settings'),\n  updateSettings: (settings: Partial<NotificationSettings>) => \n    apiClient.patch<{message: string; settings: NotificationSettings}>('/notifications/settings', settings),\n  getStats: () => apiClient.get<NotificationStats>('/notifications/stats'),\n};\n\n// Search API\nexport const searchApi = {\n  unified: (query: string, types?: string[], limit?: number) => {\n    const params = new URLSearchParams({ q: query });\n    if (types && types.length > 0) {\n      types.forEach(type => params.append('types', type));\n    }\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<UnifiedSearchResponse>(`/search?${params.toString()}`);\n  },\n  similarProjects: (projectId: number, limit?: number) => {\n    const params = new URLSearchParams();\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<{project_id: number; similar_projects: SimilarProject[]}>\n      (`/search/similar-projects/${projectId}?${params.toString()}`);\n  },\n  decisionPatterns: (query: string, limit?: number) => {\n    const params = new URLSearchParams({ q: query });\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<{query: string; decision_patterns: DecisionPattern[]}>\n      (`/search/decision-patterns?${params.toString()}`);\n  },\n  projectSuggestions: (projectId: number) => \n    apiClient.get(`/search/suggestions/${projectId}`),\n  stats: () => apiClient.get<{\n    content_summary: ContentSummary;\n    search_capabilities: Record<string, string>;\n    supported_content_types: Array<{type: string; description: string}>;\n  }>('/search/stats'),\n};\n\n// Templates API\nexport const templatesApi = {\n  getAll: (category?: TemplateCategory, templateType?: TemplateType, includeSystem?: boolean, includeAI?: boolean, limit?: number) => {\n    const params = new URLSearchParams();\n    if (category) params.append('category', category);\n    if (templateType) params.append('template_type', templateType);\n    if (includeSystem !== undefined) params.append('include_system', includeSystem.toString());\n    if (includeAI !== undefined) params.append('include_ai', includeAI.toString());\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<{templates: Template[]; total: number}>(`/templates?${params.toString()}`);\n  },\n  getById: (id: number) => apiClient.get<Template>(`/templates/${id}`),\n  getRecommended: (keywords: string, limit?: number) => {\n    const params = new URLSearchParams({ keywords });\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<{keywords: string[]; recommendations: TemplateRecommendation[]}>\n      (`/templates/recommend?${params.toString()}`);\n  },\n  generateFromProject: (projectId: number) => \n    apiClient.post<{message: string; generated_templates: Template[]}>(`/templates/generate-from-project/${projectId}`),\n  recordUsage: (templateId: number, usageData: {used_for: string; was_helpful?: boolean; feedback_notes?: string}) => \n    apiClient.post(`/templates/${templateId}/use`, usageData),\n  getCategories: () => apiClient.get<{categories: Array<{value: TemplateCategory; label: string; description: string}>}>\n    ('/templates/categories/stats'),\n  getBestPractices: (category?: TemplateCategory, limit?: number) => {\n    const params = new URLSearchParams();\n    if (category) params.append('category', category);\n    if (limit) params.append('limit', limit.toString());\n    return apiClient.get<{best_practices: BestPractice[]; total: number}>\n      (`/templates/best-practices/?${params.toString()}`);\n  },\n  getStats: () => apiClient.get<{template_stats: TemplateStats; summary: Record<string, unknown>}>('/templates/stats/overview'),\n  initSystemTemplates: () => apiClient.post<{message: string}>('/templates/init-system-templates'),\n};\n\n// Collaboration API\nexport const collaborationApi = {\n  // 사용자 관리\n  createUser: (userData: {username: string; email: string; full_name?: string}) =>\n    apiClient.post<{user: User}>('/collaboration/users', userData),\n  \n  getUserProjects: (userId: number, includeShared: boolean = true) =>\n    apiClient.get<{user_id: number; projects: Project[]; total: number}>\n      (`/collaboration/users/${userId}/projects?include_shared=${includeShared}`),\n  \n  getUserWorkload: (userId: number, projectId?: number) => {\n    const params = new URLSearchParams();\n    if (projectId) params.append('project_id', projectId.toString());\n    return apiClient.get<{user_id: number; project_id?: number; workload: UserWorkload}>\n      (`/collaboration/users/${userId}/workload?${params.toString()}`);\n  },\n\n  // 프로젝트 공유\n  shareProject: (projectId: number, shareData: {\n    target_user_id?: number;\n    target_email?: string;\n    role: UserRole;\n    permissions: SharePermission;\n  }, ownerId: number) =>\n    apiClient.post<{message: string; invite: ProjectInvite}>\n      (`/collaboration/projects/${projectId}/share?owner_id=${ownerId}`, shareData),\n\n  acceptInvite: (inviteToken: string, userId: number) =>\n    apiClient.post<{message: string; membership: ProjectMember}>\n      (`/collaboration/invites/${inviteToken}/accept?user_id=${userId}`),\n\n  getProjectMembers: (projectId: number) =>\n    apiClient.get<{project_id: number; members: ProjectMember[]; total: number}>\n      (`/collaboration/projects/${projectId}/members`),\n\n  // 태스크 할당\n  assignTask: (taskId: number, assigneeId: number, assignerId: number) =>\n    apiClient.patch<{message: string; task: Task}>\n      (`/collaboration/tasks/${taskId}/assign?assigner_id=${assignerId}`, {assignee_id: assigneeId}),\n\n  // 승인 워크플로우\n  createApprovalWorkflow: (projectId: number, approvalData: {\n    title: string;\n    description: string;\n    approver_user_ids: number[];\n    required_approvers: number;\n    task_id?: number;\n    decision_id?: number;\n  }, requestedById: number) =>\n    apiClient.post<{message: string; workflow: ApprovalWorkflow}>\n      (`/collaboration/projects/${projectId}/approvals?requested_by_id=${requestedById}`, approvalData),\n\n  respondToApproval: (workflowId: number, responseData: {\n    is_approved: boolean;\n    comment?: string;\n  }, approverId: number) =>\n    apiClient.post<{message: string; response: ApprovalResponse}>\n      (`/collaboration/approvals/${workflowId}/respond?approver_id=${approverId}`, responseData),\n\n  getApprovalWorkflow: (workflowId: number) =>\n    apiClient.get<{workflow: ApprovalWorkflow; responses: ApprovalResponse[]}>\n      (`/collaboration/approvals/${workflowId}`),\n\n  // 팀 의사결정\n  createTeamDecision: (projectId: number, decisionData: {\n    title: string;\n    description: string;\n    options: string[];\n    task_id?: number;\n    is_voting_enabled: boolean;\n    voting_deadline?: string;\n    allow_multiple_votes: boolean;\n  }, createdById: number) =>\n    apiClient.post<{message: string; decision: TeamDecision}>\n      (`/collaboration/projects/${projectId}/decisions?created_by_id=${createdById}`, decisionData),\n\n  castVote: (decisionId: number, voteData: {\n    selected_options: string[];\n    reasoning?: string;\n  }, voterId: number) =>\n    apiClient.post<{message: string; vote: DecisionVote}>\n      (`/collaboration/decisions/${decisionId}/vote?voter_id=${voterId}`, voteData),\n\n  concludeDecision: (decisionId: number, conclusionData: {\n    final_decision: string;\n    decision_rationale?: string;\n  }, concluderId: number) =>\n    apiClient.patch<{message: string; decision: TeamDecision}>\n      (`/collaboration/decisions/${decisionId}/conclude?concluder_id=${concluderId}`, conclusionData),\n\n  addDecisionComment: (decisionId: number, commentData: {\n    content: string;\n    parent_comment_id?: number;\n  }, authorId: number) =>\n    apiClient.post<{message: string; comment: DecisionComment}>\n      (`/collaboration/decisions/${decisionId}/comments?author_id=${authorId}`, commentData),\n\n  getTeamDecision: (decisionId: number) =>\n    apiClient.get<{\n      decision: TeamDecision;\n      votes: DecisionVote[];\n      comments: DecisionComment[];\n      stats: DecisionStats;\n    }>(`/collaboration/decisions/${decisionId}`),\n\n  getDecisionStats: (decisionId: number) =>\n    apiClient.get<{decision_id: number; stats: DecisionStats}>\n      (`/collaboration/decisions/${decisionId}/stats`),\n};\n\nexport default apiClient;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 545, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/hooks/use-notifications.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { notificationsApi } from '@/services/api';\nimport { NotificationStatus, NotificationSettings, ApiError } from '@/types';\nimport { toast } from 'sonner';\n\n// Query Keys\nexport const notificationKeys = {\n  all: ['notifications'] as const,\n  lists: () => [...notificationKeys.all, 'list'] as const,\n  list: (status?: NotificationStatus, limit?: number) => \n    [...notificationKeys.lists(), { status, limit }] as const,\n  pending: () => [...notificationKeys.all, 'pending'] as const,\n  settings: () => [...notificationKeys.all, 'settings'] as const,\n  stats: () => [...notificationKeys.all, 'stats'] as const,\n};\n\n// Queries\nexport function useNotifications(status?: NotificationStatus, limit?: number) {\n  return useQuery({\n    queryKey: notificationKeys.list(status, limit),\n    queryFn: () => notificationsApi.getAll(status, limit).then(res => res.data),\n    refetchInterval: 30000, // 30초마다 자동 갱신\n  });\n}\n\nexport function usePendingNotifications() {\n  return useQuery({\n    queryKey: notificationKeys.pending(),\n    queryFn: () => notificationsApi.getPending().then(res => res.data),\n    refetchInterval: 15000, // 15초마다 자동 갱신\n  });\n}\n\nexport function useNotificationSettings() {\n  return useQuery({\n    queryKey: notificationKeys.settings(),\n    queryFn: () => notificationsApi.getSettings().then(res => res.data),\n  });\n}\n\nexport function useNotificationStats() {\n  return useQuery({\n    queryKey: notificationKeys.stats(),\n    queryFn: () => notificationsApi.getStats().then(res => res.data),\n    refetchInterval: 60000, // 1분마다 자동 갱신\n  });\n}\n\n// Mutations\nexport function useGenerateNotifications() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: () => notificationsApi.generate().then(res => res.data),\n    onSuccess: (data) => {\n      // 모든 알림 관련 쿼리 무효화\n      queryClient.invalidateQueries({ queryKey: notificationKeys.all });\n      toast.success(data.message);\n    },\n    onError: (error: unknown) => {\n      const errorMessage = ((error as ApiError)?.response?.data?.detail) || '알림 생성에 실패했습니다';\n      toast.error(errorMessage);\n    },\n  });\n}\n\nexport function useMarkNotificationRead() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: number) => notificationsApi.markRead(id).then(res => res.data),\n    onSuccess: () => {\n      // 알림 관련 쿼리들 무효화\n      queryClient.invalidateQueries({ queryKey: notificationKeys.all });\n    },\n    onError: (error: unknown) => {\n      const errorMessage = ((error as ApiError)?.response?.data?.detail) || '알림 처리에 실패했습니다';\n      toast.error(errorMessage);\n    },\n  });\n}\n\nexport function useDismissNotification() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: number) => notificationsApi.dismiss(id).then(res => res.data),\n    onSuccess: () => {\n      // 알림 관련 쿼리들 무효화\n      queryClient.invalidateQueries({ queryKey: notificationKeys.all });\n    },\n    onError: (error: unknown) => {\n      const errorMessage = ((error as ApiError)?.response?.data?.detail) || '알림 해제에 실패했습니다';\n      toast.error(errorMessage);\n    },\n  });\n}\n\nexport function useUpdateNotificationSettings() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (settings: Partial<NotificationSettings>) => notificationsApi.updateSettings(settings).then(res => res.data),\n    onSuccess: (data) => {\n      // 설정 쿼리 무효화\n      queryClient.invalidateQueries({ queryKey: notificationKeys.settings() });\n      toast.success(data.message);\n    },\n    onError: (error: unknown) => {\n      const errorMessage = ((error as ApiError)?.response?.data?.detail) || '설정 업데이트에 실패했습니다';\n      toast.error(errorMessage);\n    },\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 698, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/types/index.ts"],"sourcesContent":["// Backend 모델들과 동일한 구조의 TypeScript 타입들\n\nexport enum TaskState {\n  BACKLOG = \"BACKLOG\",\n  IN_PROGRESS = \"IN_PROGRESS\", \n  DONE = \"DONE\",\n  PAUSED = \"PAUSED\",\n  CANCELED = \"CANCELED\"\n}\n\nexport enum ReviewType {\n  PREMORTEM = \"PREMORTEM\",\n  MIDMORTEM = \"MIDMORTEM\", \n  RETRO = \"RETRO\"\n}\n\nexport enum NotificationType {\n  DUE_DATE_REMINDER = \"DUE_DATE_REMINDER\",\n  OVERDUE_TASK = \"OVERDUE_TASK\",\n  MISSING_BRIEF = \"MISSING_BRIEF\",\n  MISSING_DOD = \"MISSING_DOD\",\n  STALE_TASK = \"STALE_TASK\",\n  REVIEW_SCHEDULE = \"REVIEW_SCHEDULE\"\n}\n\nexport enum NotificationStatus {\n  PENDING = \"PENDING\",\n  SENT = \"SENT\",\n  READ = \"READ\",\n  DISMISSED = \"DISMISSED\"\n}\n\nexport interface Project {\n  id?: number;\n  name: string;\n  description?: string;\n  owner_id: number;\n  is_private: boolean;\n  created_at: string;\n  task_count?: number;\n  tasks?: Task[];\n  owner?: User;\n  members?: ProjectMember[];\n}\n\nexport interface Task {\n  id?: number;\n  project_id: number;\n  title: string;\n  state: TaskState;\n  priority: number; // 1 high - 5 low\n  due_date?: string;\n  assignee_id?: number;\n  created_at: string;\n  updated_at: string;\n  // metrics\n  context_switch_count: number;\n  rework_count: number;\n  dod_checked: boolean;\n  \n  project?: Project;\n  assignee?: User;\n  brief?: Brief;\n  dod?: DoD;\n  reviews?: Review[];\n  decision_logs?: DecisionLog[];\n  samples?: Sample[];\n}\n\nexport interface Brief {\n  id?: number;\n  task_id: number;\n  // 5SB\n  purpose: string;\n  success_criteria: string;\n  constraints: string;\n  priority: string;\n  validation: string;\n  created_at: string;\n  task?: Task;\n}\n\nexport interface DoD {\n  id?: number;\n  task_id: number;\n  deliverable_formats: string; // e.g., \"MD,PDF,PPTX\"\n  mandatory_checks: string;    // JSON-encoded list of 5 checks\n  quality_bar: string;         // e.g., typo rate, length, examples, etc.\n  verification: string;        // e.g., sample n, review count\n  deadline?: string;\n  version_tag: string;\n  created_at: string;\n  task?: Task;\n}\n\nexport interface DecisionLog {\n  id?: number;\n  task_id: number;\n  date: string;\n  problem: string;\n  options: string;\n  decision_reason: string;\n  assumptions_risks: string;\n  d_plus_7_review?: string;\n  created_at: string;\n  task?: Task;\n}\n\nexport interface Review {\n  id?: number;\n  task_id: number;\n  review_type: ReviewType;\n  positives: string;\n  negatives: string;\n  changes_next: string;\n  created_at: string;\n  task?: Task;\n}\n\nexport interface Sample {\n  id?: number;\n  task_id: number;\n  proportion: number; // 10% rule\n  notes?: string;\n  approved: boolean;\n  created_at: string;\n  task?: Task;\n}\n\n// API Response 타입들\nexport interface KPIData {\n  // Core KPIs\n  rework_rate: number;\n  context_switches_per_day: number;\n  dod_adherence: number;\n  sample_validation_rate: number;\n  brief_completion_rate: number;\n  \n  // Additional metrics\n  dod_definition_rate: number;\n  avg_project_completion: number;\n  \n  // Counts\n  total_projects: number;\n  total_tasks: number;\n  total_reviews: number;\n  total_decisions: number;\n  \n  // Task state distribution\n  task_states: {\n    backlog: number;\n    in_progress: number;\n    done: number;\n    paused: number;\n    canceled: number;\n  };\n  \n  // Recent activity (last 7 days)\n  recent_tasks: number;\n  recent_reviews: number;\n  recent_decisions: number;\n}\n\nexport interface Notification {\n  id?: number;\n  type: NotificationType;\n  title: string;\n  message: string;\n  status: NotificationStatus;\n  task_id?: number;\n  project_id?: number;\n  scheduled_for: string;\n  sent_at?: string;\n  read_at?: string;\n  dismissed_at?: string;\n  created_at: string;\n}\n\nexport interface NotificationSettings {\n  id?: number;\n  due_date_reminder_days: number;\n  enable_due_date_reminders: boolean;\n  enable_missing_brief_alerts: boolean;\n  enable_missing_dod_alerts: boolean;\n  stale_task_days: number;\n  enable_stale_task_alerts: boolean;\n  enable_review_reminders: boolean;\n  review_reminder_frequency_days: number;\n}\n\nexport interface NotificationStats {\n  pending: number;\n  sent: number;\n  read: number;\n  dismissed: number;\n  total: number;\n}\n\nexport interface SearchResult {\n  id: number;\n  type: string;\n  title: string;\n  content: string;\n  task_id?: number;\n  project_id?: number;\n  created_at: string;\n  relevance_score: number;\n}\n\nexport interface UnifiedSearchResponse {\n  results: {\n    projects?: SearchResult[];\n    tasks?: SearchResult[];\n    briefs?: SearchResult[];\n    dod?: SearchResult[];\n    decisions?: SearchResult[];\n    reviews?: SearchResult[];\n  };\n  query: string;\n  total_results: number;\n}\n\nexport interface SimilarProject {\n  id: number;\n  name: string;\n  description: string;\n  similarity_score: number;\n  created_at: string;\n}\n\nexport interface DecisionPattern {\n  id: number;\n  problem: string;\n  options: string;\n  decision: string;\n  risks: string;\n  d_plus_7_review?: string;\n  has_review: boolean;\n  task_id: number;\n  created_at: string;\n  relevance_score: number;\n}\n\nexport interface ContentSummary {\n  projects: number;\n  tasks: number;\n  briefs: number;\n  dod: number;\n  decisions: number;\n  reviews: number;\n  total: number;\n}\n\nexport enum TemplateCategory {\n  WEB_DEVELOPMENT = \"WEB_DEVELOPMENT\",\n  MOBILE_APP = \"MOBILE_APP\",\n  DATA_ANALYSIS = \"DATA_ANALYSIS\",\n  RESEARCH = \"RESEARCH\",\n  MARKETING = \"MARKETING\",\n  DESIGN = \"DESIGN\",\n  INFRASTRUCTURE = \"INFRASTRUCTURE\",\n  AUTOMATION = \"AUTOMATION\",\n  CONTENT_CREATION = \"CONTENT_CREATION\",\n  BUSINESS_STRATEGY = \"BUSINESS_STRATEGY\",\n  GENERAL = \"GENERAL\"\n}\n\nexport enum TemplateType {\n  BRIEF = \"BRIEF\",\n  DOD = \"DOD\",\n  PROJECT = \"PROJECT\"\n}\n\nexport interface Template {\n  id: number;\n  name: string;\n  description?: string;\n  category: TemplateCategory;\n  template_type: TemplateType;\n  content: Record<string, unknown>;\n  is_system_template: boolean;\n  is_ai_generated: boolean;\n  usage_count: number;\n  success_rate?: number;\n  tags: string[];\n  created_at: string;\n  source_project_id?: number;\n}\n\nexport interface TemplateRecommendation {\n  template: Template;\n  relevance_score: number;\n  match_reasons: string[];\n}\n\nexport interface BestPractice {\n  id: number;\n  title: string;\n  description: string;\n  category: TemplateCategory;\n  principles: string[];\n  do_list: string[];\n  dont_list: string[];\n  examples: string[];\n  source: string;\n  confidence_score: number;\n  tags: string[];\n  created_at: string;\n}\n\nexport interface TemplateStats {\n  total_templates: number;\n  system_templates: number;\n  ai_generated_templates: number;\n  user_templates: number;\n  category_distribution: Record<string, number>;\n  most_used_templates: Array<{\n    id: number;\n    name: string;\n    category: string;\n    usage_count: number;\n    success_rate?: number;\n  }>;\n}\n\n// 협업 관련 타입들\nexport enum UserRole {\n  OWNER = \"OWNER\",\n  ADMIN = \"ADMIN\", \n  MEMBER = \"MEMBER\",\n  VIEWER = \"VIEWER\"\n}\n\nexport enum SharePermission {\n  READ = \"READ\",\n  WRITE = \"WRITE\",\n  ADMIN = \"ADMIN\"\n}\n\nexport enum InviteStatus {\n  PENDING = \"PENDING\",\n  ACCEPTED = \"ACCEPTED\",\n  REJECTED = \"REJECTED\",\n  EXPIRED = \"EXPIRED\"\n}\n\nexport enum ApprovalStatus {\n  PENDING = \"PENDING\",\n  APPROVED = \"APPROVED\",\n  REJECTED = \"REJECTED\",\n  CANCELLED = \"CANCELLED\"\n}\n\nexport interface User {\n  id: number;\n  username: string;\n  email: string;\n  full_name?: string;\n  is_active: boolean;\n  created_at: string;\n}\n\nexport interface ProjectMember {\n  user: User;\n  role: UserRole;\n  permissions: SharePermission;\n  joined_at: string;\n  is_owner: boolean;\n}\n\nexport interface ProjectInvite {\n  id: number;\n  project_id: number;\n  invited_by_id: number;\n  invited_user_id?: number;\n  invited_email?: string;\n  role: UserRole;\n  permissions: SharePermission;\n  status: InviteStatus;\n  invite_token: string;\n  expires_at: string;\n  created_at: string;\n  responded_at?: string;\n}\n\nexport interface ApprovalWorkflow {\n  id: number;\n  project_id: number;\n  task_id?: number;\n  decision_id?: number;\n  title: string;\n  description: string;\n  requested_by_id: number;\n  required_approvers: number;\n  approver_user_ids: number[];\n  status: ApprovalStatus;\n  created_at: string;\n  completed_at?: string;\n}\n\nexport interface ApprovalResponse {\n  id: number;\n  workflow_id: number;\n  approver: User;\n  is_approved: boolean;\n  comment?: string;\n  created_at: string;\n}\n\nexport interface TeamDecision {\n  id: number;\n  project_id: number;\n  task_id?: number;\n  title: string;\n  description: string;\n  options: string[];\n  is_voting_enabled: boolean;\n  voting_deadline?: string;\n  allow_multiple_votes: boolean;\n  is_concluded: boolean;\n  final_decision?: string;\n  decision_rationale?: string;\n  created_by_id: number;\n  created_at: string;\n  concluded_at?: string;\n}\n\nexport interface DecisionVote {\n  id: number;\n  decision_id: number;\n  voter: User;\n  selected_options: string[];\n  reasoning?: string;\n  created_at: string;\n}\n\nexport interface DecisionComment {\n  id: number;\n  decision_id: number;\n  author: User;\n  content: string;\n  parent_comment_id?: number;\n  created_at: string;\n}\n\nexport interface DecisionStats {\n  total_votes: number;\n  option_counts: Record<string, number>;\n  participation_rate: number;\n}\n\nexport interface UserWorkload {\n  total_tasks: number;\n  by_state: {\n    BACKLOG: number;\n    IN_PROGRESS: number;\n    DONE: number;\n    PAUSED: number;\n    CANCELED: number;\n  };\n  overdue_tasks: number;\n  high_priority_tasks: number;\n}\n\n// Error handling types\nexport interface ApiError {\n  response?: {\n    data?: {\n      detail?: string;\n    };\n  };\n}\n\n// Form 타입들\nexport interface CreateProjectForm {\n  name: string;\n  description?: string;\n}\n\nexport interface CreateTaskForm {\n  project_id: number;\n  title: string;\n  priority: number;\n  due_date?: string;\n}\n\nexport interface UpdateTaskStateForm {\n  state: TaskState;\n}\n\nexport interface CreateBriefForm {\n  task_id: number;\n  purpose: string;\n  success_criteria: string;\n  constraints: string;\n  priorities: string;\n  validation_method: string;\n}"],"names":[],"mappings":"AAAA,sCAAsC;;;;;;;;;;;;;;;;;;;;;;;AAE/B,IAAA,AAAK,mCAAA;;;;;;WAAA;;AAQL,IAAA,AAAK,oCAAA;;;;WAAA;;AAML,IAAA,AAAK,0CAAA;;;;;;;WAAA;;AASL,IAAA,AAAK,4CAAA;;;;;WAAA;;AAoOL,IAAA,AAAK,0CAAA;;;;;;;;;;;;WAAA;;AAcL,IAAA,AAAK,sCAAA;;;;WAAA;;AA2DL,IAAA,AAAK,kCAAA;;;;;WAAA;;AAOL,IAAA,AAAK,yCAAA;;;;WAAA;;AAML,IAAA,AAAK,sCAAA;;;;;WAAA;;AAOL,IAAA,AAAK,wCAAA;;;;;WAAA","debugId":null}},
    {"offset": {"line": 802, "column": 0}, "map": {"version":3,"sources":["file:///Users/jongyunkim/Documents/%E1%84%91%E1%85%A9%E1%84%91%E1%85%A9%E1%86%AF/personal-ops-mvp/frontend/src/app/notifications/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Switch } from '@/components/ui/switch';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { \n  useNotifications, \n  usePendingNotifications, \n  useNotificationSettings,\n  useNotificationStats,\n  useGenerateNotifications,\n  useMarkNotificationRead,\n  useDismissNotification,\n  useUpdateNotificationSettings\n} from '@/hooks/use-notifications';\nimport { NotificationStatus, NotificationType, NotificationSettings } from '@/types';\nimport { \n  Bell, \n  Settings, \n  CheckCircle, \n  X, \n  AlertTriangle,\n  Clock,\n  FileText,\n  Target,\n  Calendar,\n  MessageSquare,\n  RefreshCw\n} from 'lucide-react';\nimport { formatDistanceToNow } from 'date-fns';\nimport { ko } from 'date-fns/locale';\n\nconst notificationTypeConfig = {\n  [NotificationType.DUE_DATE_REMINDER]: {\n    label: '마감일 알림',\n    icon: Calendar,\n    color: 'bg-blue-100 text-blue-800'\n  },\n  [NotificationType.OVERDUE_TASK]: {\n    label: '지연 작업',\n    icon: AlertTriangle,\n    color: 'bg-red-100 text-red-800'\n  },\n  [NotificationType.MISSING_BRIEF]: {\n    label: '5SB 미작성',\n    icon: FileText,\n    color: 'bg-yellow-100 text-yellow-800'\n  },\n  [NotificationType.MISSING_DOD]: {\n    label: 'DoD 미설정',\n    icon: Target,\n    color: 'bg-orange-100 text-orange-800'\n  },\n  [NotificationType.STALE_TASK]: {\n    label: '장기 미진행',\n    icon: Clock,\n    color: 'bg-gray-100 text-gray-800'\n  },\n  [NotificationType.REVIEW_SCHEDULE]: {\n    label: '리뷰 스케줄',\n    icon: MessageSquare,\n    color: 'bg-purple-100 text-purple-800'\n  }\n};\n\nexport default function NotificationsPage() {\n  const [activeTab, setActiveTab] = useState('notifications');\n  const [settingsData, setSettingsData] = useState<Partial<NotificationSettings>>({});\n  \n  const { data: notifications, isLoading: notificationsLoading } = useNotifications();\n  const { data: pendingNotifications } = usePendingNotifications();\n  const { data: settings, isLoading: settingsLoading } = useNotificationSettings();\n  const { data: stats } = useNotificationStats();\n  \n  const generateNotifications = useGenerateNotifications();\n  const markRead = useMarkNotificationRead();\n  const dismiss = useDismissNotification();\n  const updateSettings = useUpdateNotificationSettings();\n\n  // 설정이 로드되면 로컬 상태 초기화\n  useEffect(() => {\n    if (settings) {\n      setSettingsData(settings);\n    }\n  }, [settings]);\n\n  const handleMarkRead = (id: number) => {\n    markRead.mutate(id);\n  };\n\n  const handleDismiss = (id: number) => {\n    dismiss.mutate(id);\n  };\n\n  const handleGenerateNotifications = () => {\n    generateNotifications.mutate();\n  };\n\n  const handleSettingsUpdate = () => {\n    updateSettings.mutate(settingsData);\n  };\n\n  const handleSettingChange = (field: string, value: unknown) => {\n    setSettingsData((prev: Partial<NotificationSettings>) => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  if (notificationsLoading || settingsLoading) {\n    return (\n      <div className=\"container mx-auto p-6\">\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"text-center space-y-4\">\n            <div className=\"animate-spin rounded-full h-16 w-16 border-4 border-primary border-t-transparent mx-auto\"></div>\n            <p className=\"text-muted-foreground\">알림을 불러오는 중...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto p-6 space-y-6\">\n      {/* 헤더 */}\n      <div className=\"flex flex-col gap-4\">\n        <div className=\"flex justify-between items-start\">\n          <div>\n            <h1 className=\"text-3xl font-bold flex items-center gap-2\">\n              <Bell className=\"h-8 w-8\" />\n              알림 센터\n            </h1>\n            <p className=\"text-muted-foreground\">\n              작업 관리 알림 및 리마인더 설정\n            </p>\n          </div>\n          <Button \n            onClick={handleGenerateNotifications}\n            disabled={generateNotifications.isPending}\n          >\n            <RefreshCw className=\"mr-2 h-4 w-4\" />\n            {generateNotifications.isPending ? '생성 중...' : '알림 생성'}\n          </Button>\n        </div>\n\n        {/* 통계 카드 */}\n        {stats && (\n          <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\n            <Card>\n              <CardContent className=\"p-4 text-center\">\n                <div className=\"text-2xl font-bold text-orange-600\">{stats.pending}</div>\n                <p className=\"text-sm text-muted-foreground\">대기 중</p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent className=\"p-4 text-center\">\n                <div className=\"text-2xl font-bold text-blue-600\">{stats.sent}</div>\n                <p className=\"text-sm text-muted-foreground\">발송됨</p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent className=\"p-4 text-center\">\n                <div className=\"text-2xl font-bold text-green-600\">{stats.read}</div>\n                <p className=\"text-sm text-muted-foreground\">읽음</p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent className=\"p-4 text-center\">\n                <div className=\"text-2xl font-bold text-gray-600\">{stats.dismissed}</div>\n                <p className=\"text-sm text-muted-foreground\">해제됨</p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent className=\"p-4 text-center\">\n                <div className=\"text-2xl font-bold\">{stats.total}</div>\n                <p className=\"text-sm text-muted-foreground\">총 알림</p>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n      </div>\n\n      {/* 탭 인터페이스 */}\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\n        <TabsList className=\"grid w-full grid-cols-2\">\n          <TabsTrigger value=\"notifications\">알림 목록</TabsTrigger>\n          <TabsTrigger value=\"settings\">설정</TabsTrigger>\n        </TabsList>\n\n        {/* 알림 목록 탭 */}\n        <TabsContent value=\"notifications\" className=\"space-y-4\">\n          {/* 대기중인 알림 */}\n          {pendingNotifications && pendingNotifications.length > 0 && (\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <AlertTriangle className=\"h-5 w-5 text-orange-500\" />\n                  대기중인 알림 ({pendingNotifications.length})\n                </CardTitle>\n                <CardDescription>\n                  즉시 확인이 필요한 알림들입니다\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                {pendingNotifications.map((notification) => {\n                  const config = notificationTypeConfig[notification.type];\n                  const Icon = config.icon;\n                  \n                  return (\n                    <div key={notification.id} className=\"flex items-start gap-3 p-3 border rounded-lg bg-orange-50\">\n                      <Icon className=\"h-5 w-5 text-orange-600 mt-1\" />\n                      <div className=\"flex-1 space-y-1\">\n                        <div className=\"flex items-center gap-2\">\n                          <p className=\"font-medium\">{notification.title}</p>\n                          <Badge variant=\"outline\" className={config.color}>\n                            {config.label}\n                          </Badge>\n                        </div>\n                        <p className=\"text-sm text-muted-foreground\">{notification.message}</p>\n                        <p className=\"text-xs text-muted-foreground\">\n                          {formatDistanceToNow(new Date(notification.created_at), { \n                            addSuffix: true, \n                            locale: ko \n                          })}\n                        </p>\n                      </div>\n                      <div className=\"flex gap-1\">\n                        <Button \n                          size=\"sm\" \n                          variant=\"outline\"\n                          onClick={() => handleMarkRead(notification.id!)}\n                          disabled={markRead.isPending}\n                        >\n                          <CheckCircle className=\"h-4 w-4\" />\n                        </Button>\n                        <Button \n                          size=\"sm\" \n                          variant=\"outline\"\n                          onClick={() => handleDismiss(notification.id!)}\n                          disabled={dismiss.isPending}\n                        >\n                          <X className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  );\n                })}\n              </CardContent>\n            </Card>\n          )}\n\n          {/* 전체 알림 목록 */}\n          <Card>\n            <CardHeader>\n              <CardTitle>전체 알림</CardTitle>\n              <CardDescription>\n                {notifications?.length ? `${notifications.length}개의 알림` : '알림이 없습니다'}\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {!notifications?.length ? (\n                <div className=\"text-center py-8\">\n                  <Bell className=\"h-16 w-16 mx-auto text-muted-foreground mb-4\" />\n                  <p className=\"text-muted-foreground\">알림이 없습니다</p>\n                </div>\n              ) : (\n                <div className=\"space-y-3\">\n                  {notifications.map((notification) => {\n                    const config = notificationTypeConfig[notification.type];\n                    const Icon = config.icon;\n                    \n                    return (\n                      <div \n                        key={notification.id} \n                        className={`flex items-start gap-3 p-3 border rounded-lg ${\n                          notification.status === NotificationStatus.READ ? 'bg-gray-50' : 'bg-white'\n                        }`}\n                      >\n                        <Icon className=\"h-5 w-5 text-muted-foreground mt-1\" />\n                        <div className=\"flex-1 space-y-1\">\n                          <div className=\"flex items-center gap-2\">\n                            <p className=\"font-medium\">{notification.title}</p>\n                            <Badge variant=\"outline\" className={config.color}>\n                              {config.label}\n                            </Badge>\n                            <Badge variant={notification.status === NotificationStatus.READ ? 'secondary' : 'default'}>\n                              {notification.status === NotificationStatus.PENDING && '대기'}\n                              {notification.status === NotificationStatus.SENT && '발송'}\n                              {notification.status === NotificationStatus.READ && '읽음'}\n                              {notification.status === NotificationStatus.DISMISSED && '해제'}\n                            </Badge>\n                          </div>\n                          <p className=\"text-sm text-muted-foreground\">{notification.message}</p>\n                          <p className=\"text-xs text-muted-foreground\">\n                            {formatDistanceToNow(new Date(notification.created_at), { \n                              addSuffix: true, \n                              locale: ko \n                            })}\n                          </p>\n                        </div>\n                        {notification.status !== NotificationStatus.READ && notification.status !== NotificationStatus.DISMISSED && (\n                          <div className=\"flex gap-1\">\n                            <Button \n                              size=\"sm\" \n                              variant=\"outline\"\n                              onClick={() => handleMarkRead(notification.id!)}\n                              disabled={markRead.isPending}\n                            >\n                              <CheckCircle className=\"h-4 w-4\" />\n                            </Button>\n                            <Button \n                              size=\"sm\" \n                              variant=\"outline\"\n                              onClick={() => handleDismiss(notification.id!)}\n                              disabled={dismiss.isPending}\n                            >\n                              <X className=\"h-4 w-4\" />\n                            </Button>\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* 설정 탭 */}\n        <TabsContent value=\"settings\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Settings className=\"h-5 w-5\" />\n                알림 설정\n              </CardTitle>\n              <CardDescription>\n                알림 유형별 활성화 설정 및 주기 조정\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              {settingsData && (\n                <>\n                  {/* 마감일 알림 */}\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <Label className=\"text-base font-medium\">마감일 알림</Label>\n                        <p className=\"text-sm text-muted-foreground\">작업 마감일 기반 알림</p>\n                      </div>\n                      <Switch\n                        checked={settingsData.enable_due_date_reminders}\n                        onCheckedChange={(checked) => handleSettingChange('enable_due_date_reminders', checked)}\n                      />\n                    </div>\n                    {settingsData.enable_due_date_reminders && (\n                      <div className=\"ml-4\">\n                        <Label htmlFor=\"due_date_days\">마감 며칠 전에 알림</Label>\n                        <Input\n                          id=\"due_date_days\"\n                          type=\"number\"\n                          min=\"1\"\n                          max=\"30\"\n                          value={settingsData.due_date_reminder_days}\n                          onChange={(e) => handleSettingChange('due_date_reminder_days', parseInt(e.target.value))}\n                          className=\"w-20 mt-1\"\n                        />\n                      </div>\n                    )}\n                  </div>\n\n                  {/* 5SB 미작성 알림 */}\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <Label className=\"text-base font-medium\">5SB 미작성 알림</Label>\n                      <p className=\"text-sm text-muted-foreground\">5문장 브리프가 없는 작업 알림</p>\n                    </div>\n                    <Switch\n                      checked={settingsData.enable_missing_brief_alerts}\n                      onCheckedChange={(checked) => handleSettingChange('enable_missing_brief_alerts', checked)}\n                    />\n                  </div>\n\n                  {/* DoD 미설정 알림 */}\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <Label className=\"text-base font-medium\">DoD 미설정 알림</Label>\n                      <p className=\"text-sm text-muted-foreground\">완료 정의가 없는 작업 알림</p>\n                    </div>\n                    <Switch\n                      checked={settingsData.enable_missing_dod_alerts}\n                      onCheckedChange={(checked) => handleSettingChange('enable_missing_dod_alerts', checked)}\n                    />\n                  </div>\n\n                  {/* 장기 미진행 작업 알림 */}\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <Label className=\"text-base font-medium\">장기 미진행 작업 알림</Label>\n                        <p className=\"text-sm text-muted-foreground\">오래된 진행중 작업 알림</p>\n                      </div>\n                      <Switch\n                        checked={settingsData.enable_stale_task_alerts}\n                        onCheckedChange={(checked) => handleSettingChange('enable_stale_task_alerts', checked)}\n                      />\n                    </div>\n                    {settingsData.enable_stale_task_alerts && (\n                      <div className=\"ml-4\">\n                        <Label htmlFor=\"stale_days\">며칠 후 장기 미진행으로 간주</Label>\n                        <Input\n                          id=\"stale_days\"\n                          type=\"number\"\n                          min=\"1\"\n                          max=\"30\"\n                          value={settingsData.stale_task_days}\n                          onChange={(e) => handleSettingChange('stale_task_days', parseInt(e.target.value))}\n                          className=\"w-20 mt-1\"\n                        />\n                      </div>\n                    )}\n                  </div>\n\n                  {/* 정기 리뷰 알림 */}\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <Label className=\"text-base font-medium\">정기 리뷰 알림</Label>\n                        <p className=\"text-sm text-muted-foreground\">프로젝트 정기 리뷰 스케줄 알림</p>\n                      </div>\n                      <Switch\n                        checked={settingsData.enable_review_reminders}\n                        onCheckedChange={(checked) => handleSettingChange('enable_review_reminders', checked)}\n                      />\n                    </div>\n                    {settingsData.enable_review_reminders && (\n                      <div className=\"ml-4\">\n                        <Label htmlFor=\"review_frequency\">리뷰 주기 (일)</Label>\n                        <Input\n                          id=\"review_frequency\"\n                          type=\"number\"\n                          min=\"1\"\n                          max=\"30\"\n                          value={settingsData.review_reminder_frequency_days}\n                          onChange={(e) => handleSettingChange('review_reminder_frequency_days', parseInt(e.target.value))}\n                          className=\"w-20 mt-1\"\n                        />\n                      </div>\n                    )}\n                  </div>\n\n                  <Button \n                    onClick={handleSettingsUpdate}\n                    disabled={updateSettings.isPending}\n                  >\n                    {updateSettings.isPending ? '저장 중...' : '설정 저장'}\n                  </Button>\n                </>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}